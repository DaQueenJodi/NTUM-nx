<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBigRad</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>mskRad</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>friction = 0.2
image_angle = random(360)


blink = 30
alarm[0] = 170+random(30)


//RUSH CROWN
if instance_exists(Player){
if Player.RadMony
{
sprite_index=sprBigRadMony;
}
if Player.crown = 4{ alarm[0] /= 3}

if Player.race = 15{ alarm[0] /= 2}//atom




if Player.ultra_got[89]
{

repeat(4)
{

    with instance_create(x,y,ToxicGas)
    {
    motion_add(random(360),0.3+random(1)+(Player.skill_got[5]*2));
    }

}

}

}

image_index = random(7)
image_speed = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(Player)
{
if Player.ultra_got[12]==1
    {
    mask_index=mskRad
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if blink &lt; 0
instance_destroy()
else
{
alarm[0] = 2
blink -= 1
if visible = 1
visible = 0
else visible = 1
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(Player){
//EYES Ultra d 
if ( (Player.ultra_got[12]=1) &amp;&amp; (KeyCont.key_spec[Player.p] = 1 or KeyCont.key_spec[Player.p] = 2) )
{



if instance_exists(ProtoStatue) and speed = 0
{
if point_distance(x,y,ProtoStatue.x,ProtoStatue.y) &lt; 170
{
x += lengthdir_x(12,point_direction(x,y,ProtoStatue.x,ProtoStatue.y))
y += lengthdir_y(12,point_direction(x,y,ProtoStatue.x,ProtoStatue.y))
}else if speed = 0
{
if point_distance(x,y,Player.x,Player.y) &lt; 80+(Player.skill_got[3]*90)+Player.betterpluto or instance_exists(Portal)
{
x += lengthdir_x(12,point_direction(x,y,Player.x,Player.y))
y += lengthdir_y(12,point_direction(x,y,Player.x,Player.y))
}
}

}
else if speed = 0
{
if point_distance(x,y,Player.x,Player.y) &lt; 80+(Player.skill_got[3]*90)+Player.betterpluto or instance_exists(Portal)
{
x += lengthdir_x(12,point_direction(x,y,Player.x,Player.y))
y += lengthdir_y(12,point_direction(x,y,Player.x,Player.y))
}
else if instance_exists(Implosion) and speed = 0
    {
    if point_distance(x,y,Implosion.x,Implosion.y) &lt; 80 or instance_exists(Portal)
    {
    x += lengthdir_x(12,point_direction(x,y,Implosion.x,Implosion.y))
    y += lengthdir_y(12,point_direction(x,y,Implosion.x,Implosion.y))
    }
    }
}



}//Normal stuff
else if instance_exists(ProtoStatue) and speed = 0
{
if point_distance(x,y,ProtoStatue.x,ProtoStatue.y) &lt; 170 and collision_line(x,y,ProtoStatue.x,ProtoStatue.y,Wall,0,0) &lt; 0
{
if place_free(x+lengthdir_x(12,point_direction(x,y,ProtoStatue.x,ProtoStatue.y)),y)
x += lengthdir_x(12,point_direction(x,y,ProtoStatue.x,ProtoStatue.y))
if place_free(x,y+lengthdir_y(12,point_direction(x,y,ProtoStatue.x,ProtoStatue.y)))
y += lengthdir_y(12,point_direction(x,y,ProtoStatue.x,ProtoStatue.y))
}else if speed = 0
{
if point_distance(x,y,Player.x,Player.y) &lt; 80+(Player.skill_got[3]*90)+Player.betterpluto or instance_exists(Portal)
{
if place_free(x+lengthdir_x(12,point_direction(x,y,Player.x,Player.y)),y)
x += lengthdir_x(12,point_direction(x,y,Player.x,Player.y))
if place_free(x,y+lengthdir_y(12,point_direction(x,y,Player.x,Player.y)))
y += lengthdir_y(12,point_direction(x,y,Player.x,Player.y))
}
}

}
else if speed = 0
{
if point_distance(x,y,Player.x,Player.y) &lt; 80+(Player.skill_got[3]*90)+Player.betterpluto or instance_exists(Portal)
{
if place_free(x+lengthdir_x(12,point_direction(x,y,Player.x,Player.y)),y)
x += lengthdir_x(12,point_direction(x,y,Player.x,Player.y))
if place_free(x,y+lengthdir_y(12,point_direction(x,y,Player.x,Player.y)))
y += lengthdir_y(12,point_direction(x,y,Player.x,Player.y))
}
else if instance_exists(Implosion) and speed = 0
    {
    if point_distance(x,y,Implosion.x,Implosion.y) &lt; 80 or instance_exists(Portal)
    {
    if place_free(x+lengthdir_x(12,point_direction(x,y,Implosion.x,Implosion.y)),y)
    x += lengthdir_x(12,point_direction(x,y,Implosion.x,Implosion.y))
    if place_free(x,y+lengthdir_y(12,point_direction(x,y,Implosion.x,Implosion.y)))
    y += lengthdir_y(12,point_direction(x,y,Implosion.x,Implosion.y))
    }
    }
}

    if Player.ultra_got[12]==0
    {
    if place_meeting(x,y,Wall)
    {
    move_bounce_solid(true)
    }
    }

}

if image_index &lt; 1
image_index += random(0.04)
else
image_index += 0.4
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="ProtoStatue">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if speed = 0
{instance_destroy()
other.rad += 1
snd_play(sndStatueXP)}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Implosion">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if speed = 0
{instance_destroy()
if instance_exists(Player)
Player.rad += 10
snd_play(sndRadPickup)}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if speed = 0
{instance_destroy()
other.rad += 10
snd_play(sndRadPickup)

if other.skill_got[3]//Pluto
{
with instance_create(x,y,BulletHit)
sprite_index=sprEatBigRad;
}
else
{
with instance_create(x,y,BulletHit)
sprite_index=sprEatBigRadPlut;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(Player){
if Player.ultra_got[12]==0
    {
    move_bounce_solid(false)
    }
    else
    {
    mask_index=mskPickupThroughWall;
    alarm[1]=10;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
