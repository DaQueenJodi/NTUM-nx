<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>darkness = 0
dark=noone;
if instance_exists(Player)
{
if round(Player.area/2) = Player.area/2 &amp;&amp;Player.area!=104&amp;&amp;Player.area!=8&amp;&amp;Player.area!=108
darkness = 1
}
if darkness = 1
{dark = surface_create(view_wview,view_hview)
surface_set_target(dark)
draw_clear(c_white)
surface_reset_target()}

gameovertime = 0
wave = 0
fogscroll = 0

bloomAlpha=UberCont.opt_bloom;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
scrDarkness()


if !instance_exists(Player) and !instance_exists(GenCont) &amp;&amp; !instance_exists(PlayerSpawn)
gameovertime += 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if darkness = 1
//{
if (surface_exists(dark))
{
    surface_set_target(dark);
    draw_clear(0);
    surface_free(dark);
}//}


gameovertime = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if darkness = 1
//{
if (surface_exists(dark))
{
    surface_set_target(dark);
    draw_clear(0);
    surface_free(dark);
}//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///HUD
if !instance_exists(MenuGen)
{
scrDrawHUD()
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wave += 1

scrDrawBloom()

with BoltTrail
draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,colour,1);

with Wall
{


draw_sprite_part_ext(outspr,outindex,l,r,w,h,x-4+l,y-12+r,1,1,c_white,1)//this draws white lines WHAT

}
with VikingWall
{


draw_sprite_part_ext(outspr,outindex,l,r,w,h,x-4+l,y-12+r,1,1,c_gray,1)//this draws white lines WHAT
}

/*with Wall
{

//CORRECT
if !place_free(x,y-16) and !place_free(x-16,y)
draw_sprite_part(sprWall103Out2,-1,0,0,4,4,x-4,y-12)

//CORRECT
if !place_free(x,y-16) and !place_free(x+16,y)
draw_sprite_part(sprWall103Out2,-1,20,0,4,4,x-4+20,y-12)


if !place_free(x,y+16) and !place_free(x-16,y)
draw_sprite_part(sprWall103Out2,-1,0,20,4,4,x-4,y-12+20)


if !place_free(x,y+16) and !place_free(x+16,y)
draw_sprite_part(sprWall103Out2,-1,20,20,4,4,x-4+20,y-12+20)
}*/

//with Wall
//draw_sprite(outspr,outindex,x,y)

/*mask test
with enemy
{
if sprite_exists("mask_index") and mask_index != -1
draw_sprite_ext(mask_index,-1,x,y,1,1,0,c_black,0.2)
}

with projectile
{
if sprite_exists("mask_index") and mask_index != -1
draw_sprite_ext(mask_index,-1,x,y,1,1,image_angle,c_black,0.2)
}*/

with FrozenEnemy
{
image_alpha=0.5;
draw_self();
}
with FrozenPlayer
{
image_alpha=0.5;
draw_self();
}

with Top
{
if visible{
draw_sprite(sprite_index,image_index,x+16,y-8)
draw_sprite(sprite_index,image_index,x,y-8+16)
draw_sprite(sprite_index,image_index,x+16,y-8+16)
draw_sprite(sprite_index,image_index,x,y-8)
}
}
//draw_sprite_ext(sprite_index,-1,x,y-8,1,1,0,background_color,1)
with TopSmall
draw_sprite(sprite_index,image_index,x,y-8)

//draw_sprite_ext(sprite_index,-1,x,y-8,1,1,0,background_color,1)

with Wall
draw_sprite(topspr,topindex,x,y-8)
with VikingWall
draw_sprite_ext(topspr,topindex,x,y-8,1,1,image_angle,c_gray,1)

with Bones
draw_sprite_ext(sprite_index,-1,x,y,image_xscale,1,0,c_white,1)

with TopDecal
draw_sprite_ext(sprite_index,-1,x,y,image_xscale,1,0,c_white,1)

with RavenFly
{
draw_sprite_ext(sprite_index,-1,x,y+z,right,1,0,c_white,1)
with Wall
{
if x &lt; other.x+32 and x &gt; other.x-32 and y &gt; other.y and y &lt; other.y+64
draw_sprite(topspr,topindex,x,y-8)
}
}
with InvertedRavenFly
{
draw_sprite_ext(sprite_index,-1,x,y+z,right,1,0,c_white,1)
with Wall
{
if x &lt; other.x+32 and x &gt; other.x-32 and y &gt; other.y and y &lt; other.y+64
draw_sprite(topspr,topindex,x,y-8)
}
}
with LilHunterFly
{
draw_sprite_ext(sprite_index,-1,x,y+z,right,1,0,c_white,1)
with Wall
{
if x &lt; other.x+32 and x &gt; other.x-32 and y &gt; other.y and y &lt; other.y+64
draw_sprite(topspr,topindex,x,y-8)
}
}
//Eagle eyes chest content
if(instance_exists(Player)){
if(Player.skill_got[19]){
with BigWeaponChest
{

draw_sprite_ext(wep_sprt[wep1],0,x-7,y-8,1,1,0,c_white,0.75);
draw_sprite_ext(wep_sprt[wep2],0,x-7,y-24,1,1,0,c_white,0.75);
draw_sprite_ext(wep_sprt[wep3],0,x-7,y-40,1,1,0,c_white,0.75);
}

with WeaponChest
{
if(sprite_index!=sprWeaponChestBig){
draw_sprite_ext(wep_sprt[wep],0,x-7,y-14,1,1,0,c_white,0.75);}
}
}}

with StreetLight
{
draw_sprite_ext(sprite_index,-1,x,y,image_xscale,1,0,c_white,1)
with Wall
{
if x &lt; other.x+32 and x &gt; other.x-32 and y &gt; other.y and y &lt; other.y+64
draw_sprite(topspr,topindex,x,y-8)
}
}



with CrystalShield
{
draw_sprite(sprite_index,-1,x+max(0,random(time/60)-2),y+max(0,random(time/90)-2))
with Wall
{
if x &lt; other.x+32 and x &gt; other.x-32 and y &gt; other.y-8 and y &lt; other.y+64
draw_sprite(topspr,topindex,x,y-8)
}
}

with CrownPickup
{
draw_sprite_ext(sprCrownLight,0,x,y+16,1,1,0,c_white,0.2)
draw_sprite_ext(sprCrownLight,1,x,min(y,view_yview)-16,1,(view_yview-y)/32,0,c_white,0.2)
}

with Player
{
if (KeyCont.key_spec[p] = 1 or KeyCont.key_spec[p] = 2) and race = 9
{
draw_set_alpha(0.5)
draw_set_color(c_black)
draw_rectangle(view_xview,view_yview,view_xview+view_wview,view_yview+view_hview,0)
draw_set_alpha(1)
with hitme
{if point_distance(x,y,other.x,other.y) &lt; 96
event_perform(ev_draw,0)}
with projectile
{if point_distance(x,y,other.x,other.y) &lt; 96
event_perform(ev_draw,0)}
}
if race=18
event_perform(ev_draw,0);//on top of all things cause I'm an angel!


}
//FOGGGG

if instance_exists(Player){
if Player.area = 2 || Player.area=8
{draw_sprite_ext(sprFog2,0,round(view_xview/480)*480-fogscroll,round(view_yview/360)*360,1,1,0,c_white,0.1)
draw_sprite_ext(sprFog2,0,round(view_xview/480)*480-fogscroll-480,round(view_yview/360)*360,1,1,0,c_white,0.1)
draw_sprite_ext(sprFog2,0,round(view_xview/480)*480-fogscroll+480,round(view_yview/360)*360,1,1,0,c_white,0.1)
draw_sprite_ext(sprFog2,0,round(view_xview/480)*480-fogscroll,round(view_yview/360)*360-360,1,1,0,c_white,0.1)
draw_sprite_ext(sprFog2,0,round(view_xview/480)*480-fogscroll,round(view_yview/360)*360+360,1,1,0,c_white,0.1)
draw_sprite_ext(sprFog2,0,round(view_xview/480)*480-fogscroll-480,round(view_yview/360)*360-360,1,1,0,c_white,0.1)
draw_sprite_ext(sprFog2,0,round(view_xview/480)*480-fogscroll+480,round(view_yview/360)*360+360,1,1,0,c_white,0.1)
draw_sprite_ext(sprFog2,0,round(view_xview/480)*480-fogscroll+480,round(view_yview/360)*360-360,1,1,0,c_white,0.1)
draw_sprite_ext(sprFog2,0,round(view_xview/480)*480-fogscroll-480,round(view_yview/360)*360+360,1,1,0,c_white,0.1)}
if Player.area = 102
{draw_sprite_ext(sprFog102,0,round(view_xview/480)*480-fogscroll,round(view_yview/360)*360,1,1,0,c_white,0.1)
draw_sprite_ext(sprFog102,0,round(view_xview/480)*480-fogscroll-480,round(view_yview/360)*360,1,1,0,c_white,0.1)
draw_sprite_ext(sprFog102,0,round(view_xview/480)*480-fogscroll+480,round(view_yview/360)*360,1,1,0,c_white,0.1)
draw_sprite_ext(sprFog102,0,round(view_xview/480)*480-fogscroll,round(view_yview/360)*360-360,1,1,0,c_white,0.1)
draw_sprite_ext(sprFog102,0,round(view_xview/480)*480-fogscroll,round(view_yview/360)*360+360,1,1,0,c_white,0.1)
draw_sprite_ext(sprFog102,0,round(view_xview/480)*480-fogscroll-480,round(view_yview/360)*360-360,1,1,0,c_white,0.1)
draw_sprite_ext(sprFog102,0,round(view_xview/480)*480-fogscroll+480,round(view_yview/360)*360+360,1,1,0,c_white,0.1)
draw_sprite_ext(sprFog102,0,round(view_xview/480)*480-fogscroll+480,round(view_yview/360)*360-360,1,1,0,c_white,0.1)
draw_sprite_ext(sprFog102,0,round(view_xview/480)*480-fogscroll-480,round(view_yview/360)*360+360,1,1,0,c_white,0.1)}
}

fogscroll += 0.5
if fogscroll &gt; 480
fogscroll -= 480

if darkness = 1 &amp;&amp; surface_exists(dark)
{draw_set_blend_mode(bm_subtract)
draw_surface(dark,view_xview,view_yview)
draw_set_blend_mode(bm_normal)}

with Notice{draw_self();}
with EuphoriaShield{draw_self();}

with ChesireCatTail{
if visible&amp;&amp;instance_exists(ChesireCat){
draw_sprite_ext(sprite_index,-1,x,y,ChesireCat.right,1,0,c_white,1);
}
}
with ChesireCat{
if visible{
draw_sprite_ext(sprite_index,-1,x,y,right,1,image_angle,c_white,1);
}
}

with InvertedChesireCatTail{
if visible&amp;&amp;instance_exists(ChesireCat){
draw_sprite_ext(sprite_index,-1,x,y,ChesireCat.right,1,0,c_white,1);
}
}
with InvertedChesireCat{
if visible{
draw_sprite_ext(sprite_index,-1,x,y,right,1,image_angle,c_white,1);
}
}


if instance_exists(Player){
if Player.ultra_got[44]=1&amp;&amp;instance_exists(Marker){
if Player.skill_got[5]=1{
with Marker//thronebutt and ultra d hunter
draw_sprite_ext(sprMarkerCrosshairTB,image_index,x,y,image_xscale,image_yscale,image_angle,c_white,1);
}
else{
with Marker//drawing markers on top layer for ULTRA D Hunter CRACKSHOT
draw_sprite_ext(sprMarkerCrosshair,image_index,x,y,image_xscale,image_yscale,image_angle,c_white,1);
    }
}
// EYES ULTRA C BRAINWASH
if Player.ultra_got[11]=1{
    with enemy//brainwashed enemy
    {
    //draw_text(x,y,string(team));
        if  team&gt;=4
        {
        draw_sprite_ext(sprMindPower,Player.wave*0.4,x,y,right,1,0,c_white,1)
        //draw_text(x,y,"I am a fool")
        //draw_text(target.x,target.y,"target")
        }
    }
    
    /*
    with projectile
    {
    
     if  team==4{
                draw_text(x,y,"!");
                draw_set_blend_mode(bm_add)
                draw_sprite_ext(sprite_index,image_index,x,y,4,4,image_angle,c_green,0.2)
                draw_set_blend_mode(bm_normal)
                }
                
    }*/
}

}
/* This is Hunter's ultra a damage boost
with enemy{

if(point_distance(x,y,Player.x,Player.y)&lt;100)
        {
        draw_text(x,y,string(point_distance(x,y,Player.x,Player.y)/80))
        }
        else
        {
        draw_text_color(x,y,string(point_distance(x,y,Player.x,Player.y)/25),c_blue,c_blue,c_blue,c_blue,1)
        }
         draw_text(x,y+8,string(point_distance(x,y,Player.x,Player.y)))
}
*/
/*mask testwith Wall
draw_sprite_ext(sprWall1Bot,-1,x,y,1,1,0,c_black,0.2)*/


if !instance_exists(MenuGen)
{
with Spiral
{
draw_sprite_ext(sprite_index,-1,view_xview+x,view_yview+y,image_xscale,image_yscale,image_angle,c_white,1)
draw_sprite_ext(sprite_index,-1,view_xview+x,view_yview+y,image_xscale,image_yscale,image_angle,c_black,0.8-image_xscale)
}
//scrDrawHUD()
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
