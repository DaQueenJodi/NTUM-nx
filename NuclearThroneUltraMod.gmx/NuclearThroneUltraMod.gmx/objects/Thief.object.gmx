<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprThiefIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>enemy</parentName>
  <maskName>mskBandit</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>raddrop = 6
maxhealth = 6
meleedamage = 0
size = 1

event_inherited()

spr_idle = sprThiefIdle
spr_walk = sprThiefWalk
spr_hurt = sprThiefHurt
spr_dead = sprThiefDead

snd_hurt = sndBanditHit
snd_dead = sndBanditDie

//behavior
walk = 0
gunangle = random(360)
alarm[1] = 30+random(40)
wkick = 0

alpha=0.1;

//stolen weapon data
wep=0;
wepmod1=0;
wepmod2=0;
wepmod3=0;
curse=0;


dodge=0;
stolen=0;

//0 = melee 1 = bullets 2 = shells 3 = bolts 4 = explosives 5 = energy
typ_ammo[0] = 333 typ_ammo[1] = 32 typ_ammo[2] = 8 typ_ammo[3] = 8 typ_ammo[4] = 6 typ_ammo[5] = 10
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scrDrop(18,0)

event_inherited()


if wep!=0
{//give back weapon


            with instance_create(x,y,WepPickup)
            {
            depth=-9;
            image_angle=random(360);
            scrWeapons()
            oneweponly=false;//drop it in one wep only gmode
            wep=other.wep
            name = wep_name[wep]
            ammo = 0
            type = wep_type[wep]
            curse = other.curse
            wepmod1=other.wepmod1;
            wepmod2=other.wepmod2;
            wepmod3=other.wepmod3;
            sprite_index = wep_sprt[wep]
            
            }



}

//GAMEMODE UNLOCKABLE NO HUD MODE
scrUnlockGameMode(3,"FOR KILLING A THIEF");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//PRE LOOP
alarm[1] = 20+random(10)


//LOOP
if instance_exists(Player)
{
if Player.loops&gt;0
alarm[1] = 5+random(5);
}

scrTarget()
if stolen&gt;0
{

mp_potential_step(instance_furthest(x,y,Floor).x,instance_furthest(x,y,Floor).y,3,false);
walk=alarm[1]-random(10);
stolen--;

if hspeed &gt; 0
right = 1
else if hspeed &lt; 0
right = -1
}
else if target &gt; 0
{
if collision_line(x,y,target.x,target.y,Wall,0,0) &lt; 0
{
if point_distance(target.x,target.y,x,y) &gt; 48
{
if random(12) &lt; 1
{
snd_play(sndEnemyFire)
wkick = 4
gunangle = point_direction(x,y,target.x,target.y)
with instance_create(x,y,EnemyBullet1)
{
motion_add(other.gunangle+random(20)-10,4)
image_angle = direction
team = other.team
}

alarm[1] = 20+random(5)}
else if !(x &gt; view_xview and x &lt; view_xview+view_wview and y &gt; view_yview and y &lt; view_yview+view_hview)//outside screen move towards
{
walk = 10+random(10)
motion_add(point_direction(x,y,target.x,target.y),0.8);
mp_potential_step(target.x,target.y,3,false);
}
else if random(12)&lt;1
{//stand still
alarm[1]=15+random(15);
gunangle = point_direction(x,y,target.x,target.y)
}
else
{//attack
gunangle = point_direction(x,y,target.x,target.y)
walk = 20+random(20)
motion_add(point_direction(x,y,target.x,target.y),0.8);
mp_potential_step(target.x,target.y,2,false);
}
}
else
{
direction = point_direction(x,y,target.x,target.y)
speed = 5
walk = 40+random(10)
gunangle = point_direction(x,y,target.x,target.y)
}

if target.x &lt; x
right = -1
else if target.x &gt; x
right = 1
}//wall in da way?
else if random(20) &lt; 1
{
motion_add(random(360),0.4)
walk = 20+random(10)
alarm[1] = walk+10+random(30)
gunangle = direction
if hspeed &gt; 0
right = 1
else if hspeed &lt; 0
right = -1
}
else{//make your way around the wall
motion_add(point_direction(x,y,target.x,target.y),0.8);
mp_potential_step(target.x,target.y,3,false);
walk = 10+random(10)
gunangle = point_direction(x,y,target.x,target.y)
}
}
else if random(10) &lt; 1
{
motion_add(random(360),0.4)
walk = 20+random(10)
alarm[1] = walk+10+random(30)
gunangle = direction
if hspeed &gt; 0
right = 1
else if hspeed &lt; 0
right = -1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

if walk &gt; 0
{
walk -= 1
motion_add(direction,0.8)
}

if speed &gt; 4.5 &amp;&amp; stolen&lt;1
speed = 4.5
else if speed&gt;6
speed=6;

if speed=0
alpha=0.1
else
alpha=(speed*0.2)+0.1//0.25?

if alpha&gt;1
alpha=1;

if dodge &gt; 0
{
sprite_index=spr_walk;
move_contact_solid(direction,4)
dodge -= 1
}

if point_distance(x,y,mouse_x,mouse_y)&lt;60{
if mouse_check_button_pressed(mb_left) and target &gt; 0
{
if point_distance(x,y,target.x,target.y) &lt; 70
direction = point_direction(x,y,target.x,target.y);
else
direction = point_direction(target.x+lengthdir_x(point_distance(x,y,target.x,target.y)*0.95,point_direction(x,y,mouse_x,mouse_y)),target.y+lengthdir_y(point_distance(x,y,target.x,target.y)*0.95,point_direction(x,y,mouse_x,mouse_y)),x,y)+random(60)-30
dodge = 3
walk=5;
sprite_index=spr_walk;
gunangle = point_direction(x,y,target.x,target.y);
}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///steal shit
if stolen&lt;1
{
with other
{


//0 = melee 1 = bullets 2 = shells 3 = bolts 4 = explosives 5 = energy
//typ_ammo[0] = 333 typ_ammo[1] = 32 typ_ammo[2] = 8 typ_ammo[3] = 8 typ_ammo[4] = 6 typ_ammo[5] = 10

if instance_exists(Player)
{

if Player.loops&gt;0&amp;&amp;random(3)&lt;1
{

if bwep!=0
{
    //save weapon here
    //stolen weapon data
    other.wep=bwep;
    other.wepmod1=bwepmod1;
    other.wepmod2=bwepmod2;
    other.wepmod3=bwepmod3;
    other.curse=bcurse;
    
    dir= instance_create(x,y-8,PopupText)
    dir.mytext = "WEAPON STOLEN!"
    
    bwep=0;
}

}

}

    if ( ( ammo[wep_type[wep]]-other.typ_ammo[wep_type[wep]]*2 ) &amp;&amp; wep_type[wep]!=0 )
    {
    ammo[wep_type[wep]]-=other.typ_ammo[wep_type[wep]]*2;
        
    dir = instance_create(x,y,PopupText)
    dir.mytext = "-"+string(other.typ_ammo[wep_type[wep]]*2)+" "+string(typ_name[wep_type[wep]])
    dir.colour=c_red;
    }
    else if bwep!=0
    {
    if ( (ammo[wep_type[bwep]]-other.typ_ammo[wep_type[bwep]]*2) &amp;&amp; wep_type[bwep]!=0   )
    {
    ammo[wep_type[bwep]]-=other.typ_ammo[wep_type[bwep]]*2;
     
    dir= instance_create(x,y,PopupText)
    dir.mytext = "-"+string(other.typ_ammo[wep_type[bwep]]*2)+" "+string(typ_name[wep_type[bwep]])   
    dir.colour=c_red;
    //dir = instance_create(x,y,PopupText)
    //dir.mytext = "-"+string(other.typ_ammo[bwep_type[other.bwep]]*2)+" "+string(other.typ_name[bwep_type[other.wep]])
    }
    else
    {
    //save weapon here
    //stolen weapon data
    other.wep=bwep;
    other.wepmod1=bwepmod1;
    other.wepmod2=bwepmod2;
    other.wepmod3=bwepmod3;
    other.curse=bcurse;
    
    dir= instance_create(x,y,PopupText)
    dir.mytext = "WEAPON STOLEN!"
    dir.colour=c_red;
    
    bwep=0;
    }
    
    }
    


}
stolen=4;
alarm[1]=1;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if gunangle &lt;= 180
draw_sprite_ext(sprThiefGun,-1,x+lengthdir_x(-wkick,gunangle),y+lengthdir_y(-wkick,gunangle),1,right,gunangle,c_white,alpha)
draw_sprite_ext(sprite_index,-1,x,y,right,1,0,c_white,alpha)
if gunangle &gt; 180
draw_sprite_ext(sprThiefGun,-1,x+lengthdir_x(-wkick,gunangle),y+lengthdir_y(-wkick,gunangle),1,right,gunangle,c_white,alpha)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
