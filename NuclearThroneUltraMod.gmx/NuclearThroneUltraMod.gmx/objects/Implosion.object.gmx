<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBlackHoleGrenade</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>friction = 0.1;
kraken=false;
image_speed = 0.4

offx = random(2)-1
offy = random(2)-1

if Player.skill_got[17] = 1{
dmg=18+(Player.betterlaserbrain*2);}
else{
dmg=10;}//contact damage

typ = 1 
alarm[0]=60;//Before storm start
snd_loop(sndPortalLoop)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///stop kraken sound
audio_stop_sound(sndBloodCannonLoop)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// delay between lightning spawns
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index=sprPortalDisappear;
snd_play(sndPortalClose)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x,y,PortalShock)
image_speed = 0.6;
sprite_index = sprPortalSpawn
snd_play(sndPortalOpen)
if kraken
snd_play(sndKrakenDimension);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with enemy
{
if object_index!=HotDrake{
if x &gt; other.x-256 and x &lt; other.x+256 and y &gt; other.y-256 and y &lt; other.y+256
{if place_free(x+lengthdir_x(1,point_direction(x,y,other.x,other.y)+180),y)
x += lengthdir_x(1,point_direction(x,y,other.x,other.y))
if place_free(x,y+lengthdir_y(1,point_direction(x,y,other.x,other.y)+180))
y += lengthdir_y(1,point_direction(x,y,other.x,other.y))}}
}
with chestprop
{if x &gt; other.x-256 and x &lt; other.x+256 and y &gt; other.y-256 and y &lt; other.y+256
{if place_free(x+lengthdir_x(1,point_direction(x,y,other.x,other.y)+180),y)
x += lengthdir_x(1,point_direction(x,y,other.x,other.y))
if place_free(x,y+lengthdir_y(1,point_direction(x,y,other.x,other.y)+180))
y += lengthdir_y(1,point_direction(x,y,other.x,other.y))}}
with HPPickup
{if x &gt; other.x-256 and x &lt; other.x+256 and y &gt; other.y-256 and y &lt; other.y+256
{if place_free(x+lengthdir_x(1,point_direction(x,y,other.x,other.y)+180),y)
x += lengthdir_x(1,point_direction(x,y,other.x,other.y))
if place_free(x,y+lengthdir_y(1,point_direction(x,y,other.x,other.y)+180))
y += lengthdir_y(1,point_direction(x,y,other.x,other.y))}}
with AmmoPickup
{if x &gt; other.x-256 and x &lt; other.x+256 and y &gt; other.y-256 and y &lt; other.y+256
{if place_free(x+lengthdir_x(1,point_direction(x,y,other.x,other.y)+180),y)
x += lengthdir_x(1,point_direction(x,y,other.x,other.y))
if place_free(x,y+lengthdir_y(1,point_direction(x,y,other.x,other.y)+180))
y += lengthdir_y(1,point_direction(x,y,other.x,other.y))}}
with WepPickup
{if x &gt; other.x-256 and x &lt; other.x+256 and y &gt; other.y-256 and y &lt; other.y+256
{if place_free(x+lengthdir_x(1,point_direction(x,y,other.x,other.y)+180),y)
x += lengthdir_x(1,point_direction(x,y,other.x,other.y))
if place_free(x,y+lengthdir_y(1,point_direction(x,y,other.x,other.y)+180))
y += lengthdir_y(1,point_direction(x,y,other.x,other.y))}}
with RadChest
{if x &gt; other.x-256 and x &lt; other.x+256 and y &gt; other.y-256 and y &lt; other.y+256
{if place_free(x+lengthdir_x(1,point_direction(x,y,other.x,other.y)+180),y)
x += lengthdir_x(1,point_direction(x,y,other.x,other.y))
if place_free(x,y+lengthdir_y(1,point_direction(x,y,other.x,other.y)+180))
y += lengthdir_y(1,point_direction(x,y,other.x,other.y))}}
with projectile
{if x &gt; other.x-256 and x &lt; other.x+256 and y &gt; other.y-256 and y &lt; other.y+256 and team != 2 and object_index != EnemyLaser
{if place_free(x+lengthdir_x(1,point_direction(x,y,other.x,other.y)+180),y)
x += lengthdir_x(1,point_direction(x,y,other.x,other.y))
if place_free(x,y+lengthdir_y(1,point_direction(x,y,other.x,other.y)+180))
y += lengthdir_y(1,point_direction(x,y,other.x,other.y))}}
with Sheep
{if x &gt; other.x-256 and x &lt; other.x+256 and y &gt; other.y-256 and y &lt; other.y+256 and team != 2 and object_index != EnemyLaser
{if place_free(x+lengthdir_x(1,point_direction(x,y,other.x,other.y)+180),y)
x += lengthdir_x(1,point_direction(x,y,other.x,other.y))
if place_free(x,y+lengthdir_y(1,point_direction(x,y,other.x,other.y)+180))
y += lengthdir_y(1,point_direction(x,y,other.x,other.y))}}
with ExplosiveSheep
{if x &gt; other.x-256 and x &lt; other.x+256 and y &gt; other.y-256 and y &lt; other.y+256 and team != 2 and object_index != EnemyLaser
{if place_free(x+lengthdir_x(1,point_direction(x,y,other.x,other.y)+180),y)
x += lengthdir_x(1,point_direction(x,y,other.x,other.y))
if place_free(x,y+lengthdir_y(1,point_direction(x,y,other.x,other.y)+180))
y += lengthdir_y(1,point_direction(x,y,other.x,other.y))}}


/*
repeat(8)
{
with instance_create(x,y,Lightning)
{image_angle = point_direction(x,y,mouse_x,mouse_y)+(random(280)-60)*other.accuracy
team = other.team
ammo = 9+random(3)
event_perform(ev_alarm,0)
visible = 0
with instance_create(x,y,LightningSpawn)
image_angle = other.image_angle}}
*/
if(alarm[1]&gt;0)
{
sprite_index=sprPortal;
    if(alarm[2]&lt;1){
    if kraken
    {
    motion_add(random(360),random(3));
    snd_play(choose(sndWater1,sndWater2))
    snd_play(sndBloodLauncher);
    with instance_create(x,y,Tentacle)
{image_angle = random(360);
creator=other.id;
team = other.team
ammo = 12+random(14)
dmg=9;//5 is lowest
event_perform(ev_alarm,0)
visible = 0
with instance_create(x,y,LightningSpawn)
{
sprite_index=sprTentacleSpawn
image_angle = other.image_angle
}

repeat(3){
    with instance_create(x,y,FishBoost)
    {
    motion_add( point_direction(x,y,mouse_x,mouse_y)+random(60)-30,2+random(4) );
    }}

}

alarm[2]=5;//kraken rate.    
    }
    else
    {
    
    if instance_exists(Player){
    if Player.skill_got[17] = 1
    snd_play(sndLaserUpg)
    else
    snd_play(sndLaser)
    
    }
    with instance_create(x,y,Lightning)
    {image_angle = random(360)
    team = other.team
    ammo = 9+random(3)
    event_perform(ev_alarm,0)
    visible = 0
    with instance_create(x,y,LightningSpawn)
    image_angle = other.image_angle}
    

alarm[2]=3;//lightning rate.
    }
    
        Sleep(1)
BackCont.shake += 2
    }
    //else{alarm[2]=40;}//lightning rate.
}
else if kraken
{

with instance_create(x,y,FishBoost)
    {
    motion_add( point_direction(x,y,mouse_x,mouse_y)+random(60)-30,2+random(4) );
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="hitme">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if other.team != team
{
with other
{
if sprite_index != spr_hurt
{
snd_play(snd_hurt)
my_health -= other.dmg
sprite_index = spr_hurt
image_index = 0
motion_add(point_direction(other.x,other.y,x,y),3)
Sleep(5)
BackCont.shake += 2
}
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with other
{
instance_destroy()
instance_create(x,y,FloorExplo)
}
if alarm[0]&gt;0
alarm[0]=1;
friction=0.6;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_index = sprPortalSpawn
{
image_speed = 0.4
sprite_index = sprPortal;
if(alarm[1]&lt;1)
{
if kraken
alarm[1]=120;
else
alarm[1]=46;//duration of lightningshooting
snd_play(sndThunder)
}
}

if sprite_index=sprPortalDisappear
{
audio_stop_sound(sndPortalLoop)
instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///stop kraken sound
audio_stop_sound(sndBloodCannonLoop)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
