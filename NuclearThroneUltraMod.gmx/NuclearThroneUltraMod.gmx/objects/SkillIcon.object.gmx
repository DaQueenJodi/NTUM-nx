<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSkillIcon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-102</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>mskIcon</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scrSkills()
p = 0

/*
if (Player.skillsChosen&gt;6)//ULTRA!
    {
    scrUltras()
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if KeyCont.key_fire[p] = 1 and (mouse_x &lt; x+22 and mouse_y &lt; y+22 and mouse_x &gt; x-22 and mouse_y &gt; y-22)
{
Player.skill_got[skill] = 1
Player.skillsChosen+=1;
Player.skillpoints -= 1

if skill = 0//heavy heart
{
//Unlock Elementor
scrUnlockCharacter(24,"FOR TAKING HEAVY HEART")
}
if skill = 1
{

if Player.race=25
{
Player.maxhealth += 5
Player.my_health += 5
}
else
{
Player.maxhealth += 4
Player.my_health += 4
}

}
else if skill = 2
{
if Player.race=25
Player.maxspeed +=0.75;
else
Player.maxspeed += 0.5

}
else if skill = 3 &amp;&amp; Player.race=25//Plutonium hunger
{
Player.betterpluto+=10;
}
else if skill = 4 &amp;&amp; Player.race=25//rabitpaw
{
Player.betterrabbitpaw+=0.12;
}
else if skill = 5 &amp;&amp; Player.race=2
{
//Unlock atom
scrUnlockCharacter(15,"FOR TAKING THRONEBUTT AS CRYSTAL");

}
else if skill = 10
{
if Player.race=25
{
Player.typ_amax[1] = 255+Player.skill_got[10]*345
Player.typ_amax[2] = 55+Player.skill_got[10]*55
Player.typ_amax[3] = 55+Player.skill_got[10]*55
Player.typ_amax[4] = 55+Player.skill_got[10]*55
Player.typ_amax[5] = 55+Player.skill_got[10]*55
}
else
{
Player.typ_amax[1] = 255+Player.skill_got[10]*300
Player.typ_amax[2] = 55+Player.skill_got[10]*44
Player.typ_amax[3] = 55+Player.skill_got[10]*44
Player.typ_amax[4] = 55+Player.skill_got[10]*44
Player.typ_amax[5] = 55+Player.skill_got[10]*44
}

}
else if skill = 13 &amp;&amp; Player.race = 25//Long arms
{
Player.bettermelee+=0.4;
if Player.ultra_got[97]
Player.bettermelee=1.1;
}
else if skill= 16 &amp;&amp; Player.race = 25//recycle gland
{
Player.betterrecyclegland=0.14;
if Player.ultra_got[97]
Player.betterrecyclegland=0.26;

}
else if skill = 17 &amp;&amp; Player.race = 25
{
Player.betterlaserbrain=1;

if Player.ultra_got[97]
Player.betterlaserbrain=2.1;
}
else if skill = 21//bolt marrow
{
Player.betterboltmarrow=7;
if Player.ultra_got[97]
Player.betterboltmarrow=20;
}
else if skill = 18//last wish
{
Player.ammo[1] += 200
Player.ammo[2] += 20
Player.ammo[3] += 20
Player.ammo[4] += 20
Player.ammo[5] += 20

if Player.race=25
{
Player.ammo[1] += 600
Player.ammo[2] += 60
Player.ammo[3] += 60
Player.ammo[4] += 60
Player.ammo[5] += 60
}

if Player.race==9||Player.race==12//Chicken maxhealth regain
{
if Player.maxhealth&lt;8 || (Player.skill_got[1]==1&amp;&amp;Player.maxhealth&lt;12)
{
if Player.skill_got[1]==1//rhino skin
{
Player.maxhealth=12;
}
else
Player.maxhealth=8;
}
}

Player.my_health = Player.maxhealth

if Player.ammo[1] &gt; Player.typ_amax[1]
Player.ammo[1] = Player.typ_amax[1]

if Player.ammo[2] &gt; Player.typ_amax[2]
Player.ammo[2] = Player.typ_amax[2]

if Player.ammo[3] &gt; Player.typ_amax[3]
Player.ammo[3] = Player.typ_amax[3]

if Player.ammo[4] &gt; Player.typ_amax[4]
Player.ammo[4] = Player.typ_amax[4]

if Player.ammo[5] &gt; Player.typ_amax[5]
Player.ammo[5] = Player.typ_amax[5]

if Player.curse = 1 or Player.bcurse = 1
{
repeat(10)
instance_create(Player.x+random(16)-8,Player.y+random(16)-8,Curse)
}
Player.curse = 0
Player.bcurse = 0

if UberCont.lastwishused=false
Player.skeletonlives+=1;

}
else if skill = 5 &amp;&amp; Player.race = 1//thronebut for fish
{
with Player//update the ammo values
scrWeapons();
}
else if skill = 5 &amp;&amp; Player.race = 16//VIKING
{
Player.maxarmour+=1;
Player.armour+=1;//kindness here
}
else if skill = 19{

if Player.race=25
{
Player.accuracy = Player.standartAccuracy*0.3//in case you have build up rage use the standart
Player.standartAccuracy=Player.accuracy//new standart
}
else
{
Player.accuracy = Player.standartAccuracy*0.38//in case you have build up rage use the standart
Player.standartAccuracy=Player.accuracy//new standart
}


}
else if skill==25{
Player.strongspirit=true;
Player.strongspiritused=false;}
else if skill=27//patience
{


if Player.race=25
Player.skillpoints++;
else
Player.patience++;
}

if skill==13||skill==14||skill==15||skill==16||skill==17||skill==21//wep specific
{Player.heavyheart++;}

with SkillIcon
instance_destroy()

with LevCont
instance_destroy()

with UltraIcon
instance_destroy()

if Player.skillpoints &gt; 0
{
instance_create(x,y,LevCont);
}
else
{
with instance_create(x,y,GenCont){
race = Player.race;}
}
snd_play(skill_msnd[skill])//skill_msnd no more array sorry but memory

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_dkgray)
//draw_rectangle(x-12,y-16,x+12,y+16,0)

if mouse_x &gt; x-16 and mouse_x &lt; x+16 and mouse_y &gt; y-20 and mouse_y &lt; y+20
{
draw_sprite(sprSkillSelected,-1,x,y)
draw_sprite(sprite_index,skill,x+2,y-2)
}
else
{
draw_sprite(sprite_index,skill,x,y)
draw_sprite_ext(sprite_index,skill,x,y,1,1,0,c_black,0.05)
}

draw_set_font(fntM)
draw_set_valign(fa_bottom)
draw_set_halign(fa_right)

txt2 = string(skill_name[skill])+"#"+string(skill_text[skill])
if mouse_x &gt; x-16 and mouse_x &lt; x+16 and mouse_y &gt; y-20 and mouse_y &lt; y+20
{

drawx = x
drawy = view_yview+view_hview-48

if drawx-string_width(txt2)/2-2 &lt; view_xview+2
drawx = view_xview+4+string_width(txt2)/2

if drawx+string_width(txt2)/2+2&gt; view_xview+view_wview-2
drawx = view_xview+view_wview-4-string_width(txt2)/2

draw_set_color(c_black)
draw_set_alpha(0.8)
draw_rectangle(drawx-string_width(txt2)/2-2,drawy-17-string_height(txt2),drawx+string_width(txt2)/2+2,drawy-12,0)
draw_set_alpha(1)


draw_sprite_ext(sprMenuPointer,0,x,drawy-12,1,1,0,c_white,0.8)

draw_text(drawx+string_width(txt2)/2,drawy-13,string(txt2))
draw_text(drawx+string_width(txt2)/2+1,drawy-13,string(txt2))
draw_text(drawx+string_width(txt2)/2+1,drawy-14,string(txt2))
draw_set_color(c_silver)
draw_text(drawx+string_width(txt2)/2,drawy-14,string(txt2))
draw_set_color(c_white)
draw_text(drawx+string_width(txt2)/2,drawy-14-string_height(txt2)+string_height(skill_name[skill]),string(skill_name[skill]))
}
//draw_text(x,y-32,string(skill)); // just to show the skillnumber
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
