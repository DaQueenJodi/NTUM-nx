<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprShield</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>mskShield</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>time = 0

team =2
p = 0
friction = 0.45



with projectile
{
var homing;
homing= false;
}

wave=0;

if instance_exists(Player)
{

if(Player.ultra_got[7]==1)
{
time += 160
}
else{
Player.visible=false;}

if Player.ultra_got[6]=1
snd_play(sndCrystalJuggerNaut)
else
snd_play(sndCrystalShield)


if Player.bskin=2
{
sprite_index=sprShieldC
spr_disappear=sprShieldCDisappear;
}
else if Player.bskin=1
{
sprite_index=sprShieldB
spr_disappear=sprShieldBDisappear;
}
else
{
sprite_index=sprShield
spr_disappear=sprShieldDisappear;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if Player.ultra_got[6]=1{
Player.x = x;
Player.y = y;
}

if Player.ultra_got[8]=1{
with projectile
{
if team=other.team&amp;&amp;object_index!=Laser&amp;&amp;object_index!=MegaLaser{
if instance_exists(enemy)
        {
            if (direction&lt;point_direction(x,y,instance_nearest(x,y,enemy).x,instance_nearest(x,y,enemy).y) )
            {
            direction+=5
            image_angle+=5
            }
            else if (direction&gt;point_direction(x,y,instance_nearest(x,y,enemy).x,instance_nearest(x,y,enemy).y) )
            {
            direction-=5
            image_angle-=5
            }
            
if place_free(x+lengthdir_x(2,point_direction(x,y,instance_nearest(x,y,enemy).x,instance_nearest(x,y,enemy).y)),y)
x += lengthdir_x(2,point_direction(x,y,instance_nearest(x,y,enemy).x,instance_nearest(x,y,enemy).y))
if place_free(x,y+lengthdir_y(2,point_direction(x,y,Player.x,Player.y)))
y += lengthdir_y(2,point_direction(x,y,instance_nearest(x,y,enemy).x,instance_nearest(x,y,enemy).y))
        }
        }
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(Player){
if Player.ultra_got[6]=1{
if KeyCont.key_west[p] = 2 or KeyCont.key_west[p] = 1
hspeed -= 3
if KeyCont.key_east[p] = 2 or KeyCont.key_east[p] = 1
hspeed += 3
if KeyCont.key_nort[p] = 2 or KeyCont.key_nort[p] = 1
vspeed -= 3
if KeyCont.key_sout[p] = 2 or KeyCont.key_sout[p] = 1
vspeed += 3


if speed &gt; Player.maxspeed/1.25
speed = Player.maxspeed/1.25
}
if(sprite_index!=spr_disappear){//exit code as soon as the shield starts to dissapear
if instance_exists(Player)
{

}
else if sprite_index != spr_disappear
{
sprite_index = spr_disappear
image_speed = 0.6
image_index = 0
}
if(sprite_index!=spr_disappear){
Player.x = x;
Player.y = y;
Player.speed = 0;
}
time += 3
if Player.skill_got[5]//thronebuttttt
time-=2;
if time &gt; 220 and sprite_index != spr_disappear
{
Player.visible=true;
sprite_index = spr_disappear
image_speed = 0.6
image_index = 0
}
if KeyCont.key_spec[p] = 3
{
Player.visible=true;
sprite_index = spr_disappear
image_speed = 0.6
image_index = 0
}}
if Player.ultra_got[6]=1{
mask_index=mskMovingShield;
if place_meeting(x,y,Wall){

move_contact_solid(direction,max(1,min(Player.maxspeed,speed)))
if !place_free(x+hspeed,y){hspeed /= 2
if !place_free(x+hspeed,y) hspeed = 0}
if !place_free(x,y+vspeed){vspeed /= 2
if !place_free(x,y+vspeed)vspeed = 0}

}
mask_index=mskShield;
}}

wave++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="hitme">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if image_speed = 0 and other.team != team
other.direction = point_direction(x,y,other.x,other.y)
if(Player.ultra_got[8]==1)//Vengefull
{
with other
{
if object_index!=Player
motion_add(direction,3);
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="projectile">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if team != other.team
{
if other.typ =1
{
other.team = team
if instance_exists(Player)
{
if(Player.ultra_got[8]==1)//Vengefull
{
other.direction = point_direction(x,y,other.x,other.y);

if (other.object_index=EnemyLaser)
{
with other
instance_destroy();

exit;
}

var target=-1;
if instance_exists(enemy)
target=instance_nearest(x+lengthdir_x(80,other.direction),y+lengthdir_y(80,other.direction),enemy);// nearest in direction of shot

if instance_exists(enemy) &amp;&amp; target&gt;0 &amp;&amp; instance_exists(target) &amp;&amp; instance_exists(Wall)
{

        if!(collision_line(x,y,target.x,target.y,Wall,false,true) )//No walls between player and target?
        {
            if(other.direction&lt;point_direction(x,y,target.x,target.y)+60)
                {
            other.image_angle=point_direction(x,y,target.x,target.y);
            other.direction=point_direction(x,y,target.x,target.y);
            other.speed+=2;
            //image_angle = other.direction
            
                with instance_create(other.x,other.y,Deflect)
                {
                image_xscale=2;
                image_yscale=2;
                image_angle = other.direction
                }
            }
       }

}
else if instance_exists(enemy){
other.direction=point_direction(x,y,instance_nearest(x,y,enemy).x,instance_nearest(x,y,enemy).y);
other.image_angle=direction;
with instance_create(other.x,other.y,Deflect)
image_angle = other.direction
}
}
else{
other.direction = point_direction(x,y,other.x,other.y)
other.image_angle = other.direction
with instance_create(other.x,other.y,Deflect)
image_angle = other.direction
}
}
else{
other.direction = point_direction(x,y,other.x,other.y)
other.image_angle = other.direction
with instance_create(other.x,other.y,Deflect)
image_angle = other.direction
}
}
if other.typ = 2 || other.object_index=Flame || other.object_index=TrapFire
{
with other
instance_destroy()
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_index = spr_disappear
instance_destroy()
else
{image_index = 3
image_speed = 0}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(Player)
{
if Player.ultra_got[6]=1{

if x!=xprevious||y!=yprevious
{
    if Player.bskin=2
    {
    draw_sprite(sprCrystalShieldCWalkBack,wave*0.4,x+max(0,random(time/60)-2),y+4+max(0,random(time/90)-2))
    draw_sprite(sprite_index,-1,x+max(0,random(time/60)-2),y+max(0,random(time/90)-2))
    draw_sprite(sprCrystalShieldCWalkFront,wave*0.4,x+max(0,random(time/60)-2),y-8)
    }
    else if Player.bskin=1
    {
    draw_sprite(sprCrystalShieldBWalkBack,wave*0.4,x+max(0,random(time/60)-2),y+4+max(0,random(time/90)-2))
    draw_sprite(sprite_index,-1,x+max(0,random(time/60)-2),y+max(0,random(time/90)-2))
    draw_sprite(sprCrystalShieldBWalkFront,wave*0.4,x+max(0,random(time/60)-2),y-8)
    }
    else
    {
    draw_sprite(sprCrystalShieldWalkBack,wave*0.4,x+max(0,random(time/60)-2),y+4+max(0,random(time/90)-2))
    draw_sprite(sprite_index,-1,x+max(0,random(time/60)-2),y+max(0,random(time/90)-2))
    draw_sprite(sprCrystalShieldWalkFront,wave*0.4,x+max(0,random(time/60)-2),y-8)
    }
}
else
{
wave=0;
    if Player.bskin=2
    {
    draw_sprite(sprCrystalShieldCIdleBack,wave*0.4,x+max(0,random(time/60)-2),y+4+max(0,random(time/90)-2))
    draw_sprite(sprite_index,-1,x+max(0,random(time/60)-2),y+max(0,random(time/90)-2))
    draw_sprite(sprCrystalShieldCIdleFront,wave*0.4,x+max(0,random(time/60)-2),y-8+max(0,random(time/90)-2))
    }
    else if Player.bskin=1
    {
    draw_sprite(sprCrystalShieldBIdleBack,wave*0.4,x+max(0,random(time/60)-2),y+4+max(0,random(time/90)-2))
    draw_sprite(sprite_index,-1,x+max(0,random(time/60)-2),y+max(0,random(time/90)-2))
    draw_sprite(sprCrystalShieldBIdleFront,wave*0.4,x+max(0,random(time/60)-2),y-8+max(0,random(time/90)-2))
    }
    else
    {
    draw_sprite(sprCrystalShieldIdleBack,wave*0.4,x+max(0,random(time/60)-2),y+4+max(0,random(time/90)-2))
    draw_sprite(sprite_index,-1,x+max(0,random(time/60)-2),y+max(0,random(time/90)-2))
    draw_sprite(sprCrystalShieldIdleFront,wave*0.4,x+max(0,random(time/60)-2),y-8+max(0,random(time/90)-2))
    }
}

}
else
draw_sprite(sprite_index,-1,x+max(0,random(time/60)-2),y+max(0,random(time/90)-2))
}
else
draw_sprite(sprite_index,-1,x+max(0,random(time/60)-2),y+max(0,random(time/90)-2))
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,44</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
