<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprInvertedAssassinBossIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>enemy</parentName>
  <maskName>mskBandit</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>raddrop = 40
maxhealth = 150
meleedamage = 0
size = 1
bloodempty=0


event_inherited()

if instance_exists(Player){
my_health=round( (1+(Player.loops*0.2))*my_health )//bandit loop 1: 1.1*4= 5(rounded up)
maxhealth=my_health;
}

spr_idle = sprInvertedAssassinBossSit
spr_walk = sprInvertedAssassinBossDash
spr_hurt = sprInvertedAssassinBossHurt
spr_dead = sprInvertedAssassinBossDead



snd_hurt = sndAssassinHit
snd_dead = sndAssassinDie

snd_play(sndAssassinGetUp)

//behavior
walk = 0
gunangle = random(360)
alarm[1] = 20+random(40)
alarm[3] = alarm[1];//change sprite to normal idle
wepangle = choose(-140,140)
wepflip = 1

dodge=0;
dodgethis=-1;

MorphMe=false;
frozen=false;
prevhealth=my_health;

instance_create(x,y,WallBreak);
instance_create(x+16,y+16,WallBreak);
instance_create(x+16,y-16,WallBreak);
instance_create(x-16,y+16,WallBreak);
instance_create(x-16,y-16,WallBreak);

    repeat(8){
    with instance_create(x,y,Smoke)
    motion_add(random(360),1+random(2))}

instance_create(x,y,DramaCamera);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scrDrop(20,0)
scrDrop(80,0)

scrBusinessHogGoldChest();
event_inherited()

with Corpse
{
//Big Assassins corpse doesnt move
if mask_index=other.mask_index
speed=0;

}

with MusCont
{
//optimise sound_discard(song)
//optimise sound_discard(amb)

audio_stop_sound(song);
song = sndBossWin
snd_play(song)
//snd_loop(amb)

audio_master_gain(max(0,sqrt(UberCont.opt_sfxvol)))

audio_sound_gain(song,max(0,sqrt(UberCont.opt_musvol)),0);

audio_sound_gain(amb,max(0,sqrt(UberCont.opt_ambvol)),0);

//audio_sound_gain(sndBossWin,max(0,sqrt(UberCont.opt_musvol)),0);

}
snd_play(sndBossWin);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spr_idle=sprInvertedAssassinBossIdle;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SMACK THAT! all on da floor
alarm[0] = 15
snd_play(sndAssassinAttack)
wepangle = -wepangle
motion_add(gunangle,6)
if target&gt;0
{
gunangle = point_direction(x,y,target.x,target.y)

with instance_create(x+lengthdir_x(10,gunangle),y+lengthdir_y(10,gunangle),AssassinSlash)
{
dmg=6;
image_angle = other.gunangle
motion_add(other.gunangle+random(10)-5,3.5)
team = other.team
}
alarm[1] = 15+random(10)
dodge=1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[1] = 2+random(5)
scrTarget()
if target &gt; 0
{
if collision_line(x,y,target.x,target.y,Wall,0,0) &lt; 0
{
if random(4)&lt;1//shift dodgy movement
{

move_contact_solid(direction+choose(90,-90),1+irandom(4))

}
if point_distance(target.x,target.y,x,y) &lt; 90
{//SMACK THAT
alarm[2]=3//the delay that everyone wants
instance_create(x,y,Notice);
alarm[1]=7;
}
else if random(8)&lt;1
{
alarm[2]=1;

snd_play(sndEnemyFire);

with instance_create(x,y,EnemyBullet5)
{motion_add(other.gunangle+4,6+random(4))
team = other.team
image_angle = direction}

}
else
{
motion_add(point_direction(target.x,target.y,x,y)+random(20)-10,4);
walk = 30+random(10)
gunangle = point_direction(x,y,target.x,target.y)
}

if target.x &lt; x
right = -1
else if target.x &gt; x
right = 1
}
else if point_distance(target.x,target.y,x,y) &lt; 74
{//SMACK THAT THROUGH WALLS
alarm[2]=6//the delay that everyone wants
instance_create(x,y,Notice);
alarm[1]=8;
}
else if random(4) &lt; 1
{
motion_add(random(360),0.4)
walk = 5+random(10)
alarm[1] = walk+random(7)
gunangle = direction
if hspeed &gt; 0
right = 1
else if hspeed &lt; 0
right = -1
}
}
else if random(10) &lt; 1
{
motion_add(random(360),0.4)
walk = 20+random(10)
alarm[1] = walk+10+random(30)
gunangle = direction
if hspeed &gt; 0
right = 1
else if hspeed &lt; 0
right = -1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wepangle = -wepangle</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

if walk &gt; 0
{
walk -= 1
motion_add(direction,3)
if target &gt; 0
mp_potential_step(target.x,target.y,3,false)
}

if speed &gt; 6
speed = 6

if dodge &gt; 0
{
sprite_index=spr_walk;
move_contact_solid(direction,12)
dodge -= 1
}

//hes firing at me!
if point_distance(x,y,mouse_x,mouse_y)&lt;60{
if mouse_check_button_pressed(mb_left) and target &gt; 0
{
if point_distance(x,y,target.x,target.y) &lt; 64
direction = point_direction(x,y,target.x,target.y)
else
direction = point_direction(target.x+lengthdir_x(point_distance(x,y,target.x,target.y)*0.95,point_direction(x,y,mouse_x,mouse_y)),target.y+lengthdir_y(point_distance(x,y,target.x,target.y)*0.95,point_direction(x,y,mouse_x,mouse_y)),x,y)+random(60)-30
dodge = 3
walk=4;
sprite_index=spr_walk;
gunangle = direction
}}


if target&gt;0 &amp;&amp; alarm[0]&gt;0//we just smacked dat
{
motion_add(point_direction(x,y,target.x,target.y)+180+random(40)-20,4)
walk = alarm[0]
}


//Dodge bullet or hit it back
if instance_exists(projectile)
{
    dodgethis = instance_nearest(x,y,projectile);
    with instance_nearest(x,y,projectile)
    {
    if team=2
    other.dodgethis=id;
    }
    
    if point_distance(x,y,dodgethis.x,dodgethis.y)&lt;64&amp;&amp;dodgethis.team=2
    {
    var forwardprojectilex;
    var forwardprojectiley;
    
    forwardprojectilex=lengthdir_x(dodgethis.speed,dodgethis.direction);
    forwardprojectiley=lengthdir_y(dodgethis.speed,dodgethis.direction);
    
    //direction = point_direction(target.x+lengthdir_x(point_distance(x,y,target.x,target.y)*0.95,point_direction(x,y,forwardprojectilex,forwardprojectiley)),target.y+lengthdir_y(point_distance(x,y,target.x,target.y)*0.95,point_direction(x,y,forwardprojectilex,forwardprojectiley)),x,y)+random(60)-30
    var projectiledir = point_direction(x,y,dodgethis.x,dodgethis.y);
    
    if alarm[0]&lt;1 &amp;&amp; projectiledir &lt; gunangle+100 &amp;&amp; projectiledir &gt; gunangle-100 &amp;&amp; dodgethis.typ!=0
    {//SMACK THAT PROJETILE BACK
    
        with instance_create(x+lengthdir_x(2,projectiledir),y+lengthdir_y(2,projectiledir),AssassinSlash)
        {
        dmg=6;
        image_angle = other.gunangle
        motion_add(other.gunangle+random(10)-5,2.5)
        team = other.team
        }
        alarm[0] = 8
        
        snd_play(sndAssassinAttack)
        wepangle = -wepangle
        motion_add(projectiledir,6)
    
    }
    else if random(4)&lt;1
    {//TELEPORT
    
    with instance_nearest(instance_furthest(x+random(120)-60,y+random(120)-60,Floor),instance_furthest(x+random(120)-60,y+random(120)-60,Floor),Floor)
    {
    other.x=x+16;
    other.y=y+16;
    }
    
    }
    else
    {//dodge it
    direction=point_direction(x,y,forwardprojectilex,forwardprojectiley)+180+random(30)-15;
    dodge=3;
    alarm[0] += 1
    }
    
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="hitme">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if other.team != team
motion_add(point_direction(other.x,other.y,x,y),4)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if dodge&gt;0
move_bounce_solid(false)
else
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_index=sprInvertedAssassinBossSit
spr_idle=sprInvertedAssassinBossIdle;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(Drama)
{
with InvertedAssassinBoss
{
draw_sprite_ext(sprInvertedAssassinBossSword,-1,x,y,1,wepflip,gunangle+wepangle,c_white,1)
draw_sprite_ext(sprInvertedAssassinBossSit,-1,x,y,right,1,0,c_white,1)
image_index += 0.4
}
}
else
{

if gunangle &lt;= 180
draw_sprite_ext(sprInvertedAssassinBossSword,-1,x,y,1,wepflip,gunangle+wepangle,c_white,1)
draw_sprite_ext(sprite_index,-1,x,y,right,1,0,c_white,1)
if gunangle &gt; 180
draw_sprite_ext(sprInvertedAssassinBossSword,-1,x,y,1,wepflip,gunangle+wepangle,c_white,1)

}


if speed&gt;1
{
draw_set_blend_mode(bm_add);
draw_sprite_ext(sprInvertedAssassinBossDash,image_index-1,xprevious,yprevious,right,1,0,c_white,0.6);
draw_set_blend_mode(bm_normal);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
