<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprLavaBallIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>enemy</parentName>
  <maskName>mskLavaBall</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>raddrop = 12
maxhealth = 38//50
meleedamage = 4
size = 1

event_inherited()

spr_idle = sprLavaBallIdle
spr_walk = sprLavaBallWalk
spr_hurt = sprLavaBallHurt
spr_dead = sprLavaBallDead
spr_fire = sprLavaBallFire


snd_dead = sndWallBreak;
snd_hurt = sndHitRock;

walk=0;
//behavior
alarm[1] = 10+random(10)

if instance_exists(Player)
motion_add(point_direction(Player.x,Player.y,x,y),1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scrDrop(20,1)
event_inherited()
repeat(8)
{
with instance_create(x,y,Flame)
{motion_add(random(360),1+random(2))
team = other.team
move_contact_solid(direction,6)
image_speed=0.5+random(0.2);
sprite_index= sprFireLilHunter;}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//when this is on spit fire
if target&gt;0
direction = point_direction(x,y,target.x,target.y)+180
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[1] = 10+random(15)
if sprite_index != spr_hurt
sprite_index = spr_idle
scrTarget()
if target &gt; 0
{
if collision_line(x,y,target.x,target.y,Wall,0,0) &lt; 0
{
if random(6) &lt; 1
{
direction = point_direction(x,y,target.x,target.y)+180
snd_play(sndFiretrap);

speed*=0.4;
image_index = 0
sprite_index = spr_fire
alarm[2]=5+random(30);
walk = alarm[2]+20;
alarm[1] = alarm[2]+20;
}
else if random(4)&lt;1{
walk=15+random(15);
alarm[1]=walk;
direction = point_direction(x,y,target.x,target.y)+random(20)-10
}
else if random(3)&lt;1{
direction=random(360);
walk=12+random(20);
alarm[1]=walk;
}
else{
speed=0;
walk=20+random(30);
alarm[1]=walk+15+random(20);
}
}//wall in between\/
else if random(7)&lt;1{
walk=12+random(12);
alarm[1]=walk;
direction = point_direction(x,y,target.x,target.y)+random(20)-10}
else if random(7)&lt;1{
walk=11+random(11);
alarm[1]=walk;
direction = point_direction(x,y,target.x,target.y)+random(4)-2}
else if random(5)&lt;1{
walk=14+random(16);
alarm[1]=walk;
direction = random(360)}
else{
walk=15+random(15);
alarm[1]=walk+15+random(30);
direction = random(360)}
}//no target\/
else if random(10)&lt;2{
motion_add(random(360),0.5)
walk=30+random(10)
alarm[1]=walk;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

//if sprite_index != spr_hurt
//motion_add(direction,0.8)
if walk &gt; 0
{
walk -= 1
motion_add(direction,0.8)
}

if hspeed &gt; 0
right = 1
else if hspeed &lt; 0
right = -1


if instance_exists(Player)
{
    if Player.loops&gt;0
    {
    if speed &gt; 2
    speed = 2
    }
    else
    {
    if speed &gt; 1.5
    speed = 1.5
    }
}
else
{
if speed &gt; 1.5
speed = 1.5
}


if alarm[2]&gt;0&amp;&amp;target&gt;0
{

direction = point_direction(x,y,target.xprevious,target.yprevious)
    BackCont.shake += 0.1
    if instance_exists(Player)
    {
    if Player.loops&gt;0
    {//loopfire
        repeat(2){
        with instance_create(x/*-8*/,y,Flame)
            {
            sprite_index = sprFireLilHunter
        
            motion_add(other.direction+random(16)-6,3+random(4))
            image_angle = direction
            team = other.team
            }
        }
    }
    else
    {//preloopfire
        repeat(2){
        with instance_create(x/*-8*/,y,Flame)
            {
            sprite_index = sprFireLilHunter
        
            motion_add(other.direction+random(12)-6,2+random(3))
            image_angle = direction
            team = other.team
            }
        }

    }
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_bounce_solid(true)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,-1,x,y,right,1,0,c_white,1)</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
