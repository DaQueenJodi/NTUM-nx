<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprInvertedChesireCatIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>enemy</parentName>
  <maskName>mskChesireCat</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>raddrop = 350
maxhealth = 610
meleedamage = 4
size = 3

if UberCont.loops&gt;1
maxhealth=740;

event_inherited()
if instance_exists(Player){
my_health=round( (1+(Player.loops*0.2))*my_health )//bandit loop 1: 1.1*4= 5(rounded up)
maxhealth=my_health;
}
spr_idle = sprInvertedChesireCatIdle
spr_walk = sprInvertedChesireCatIdle
spr_hurt = sprInvertedChesireCatHurt
spr_dead = sprInvertedChesireCatDead
spr_fire = sprInvertedChesireCatPrepLaser


snd_dead = sndBigBanditMeleeHit;
snd_hurt = sndBigDogHit;
snd_mele = sndRhinoFreakMelee;

walk=0;
//behavior
alarm[2] = 60+random(120);
visible=false;
//if instance_exists(Player)
//motion_add(point_direction(Player.x,Player.y,x,y),1)

mask_index=mskPickupThroughWall;

drama=false;

instance_create(x,y,InvertedChesireCatTail);

ammo=8;

dodge=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()

scrEndBoss();

Sleep(200)

instance_create(x,y,ChesireCatExplosion);

scrDrop(10,1)

scrDrop(100,0)
scrDrop(20,0)
scrDrop(50,40)
scrDrop(50,100)


with MusCont
{
//optimise sound_discard(song)
//optimise sound_discard(amb)

audio_stop_sound(song);
song = sndBossWin
snd_play(song)
//snd_loop(amb)

audio_master_gain(max(0,sqrt(UberCont.opt_sfxvol)))

audio_sound_gain(song,max(0,sqrt(UberCont.opt_musvol)),0);

audio_sound_gain(amb,max(0,sqrt(UberCont.opt_ambvol)),0);

//audio_sound_gain(sndBossWin,max(0,sqrt(UberCont.opt_musvol)),0);

}

if instance_exists(Marker)
{
    if place_meeting(x,y,Marker)
    {
        with Player
        {
        
        chesirecatmarked=true;
        
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///overwrite the safety check
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///mask normal
mask_index=mskChesireCat;
alarm[5]=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///mask throughwall
mask_index=mskPickupThroughWall;
alarm[6]=2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///spinattack
//snd_play(sndDragonStop)
snd_play(sndStatueHurt);
mask_index=mskChesireCat;

ammo-=1;
ang = random(360)
repeat(9)
{
with instance_create(xprevious,yprevious,EnemyBullet1)
{motion_add(other.ang,0.8+random(3))
image_angle = direction
team = other.team}
ang += 360/9
}

repeat(20)
{
with instance_create(xprevious,yprevious,EnemyBullet1)
{motion_add(other.ang,3+random(4))
image_angle = direction
team = other.team}
ang += 360/6+random(6)
}
if ammo&gt;0
alarm[4]=7;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///laserattack
mask_index=mskChesireCat;
if ammo &gt; 0
{
ammo -= 1
alarm[3] = 4
snd_play(sndLaser)
//sprite_index = spr_fire
//repeat(4){
with instance_create(x,y,EnemyLaser)
{image_angle = other.gunangle+random(8)-4;
image_yscale = 1.8;//1.25
team = other.team
event_perform(ev_alarm,0)}//}
}
else
{
drama=true;
sprite_index = spr_idle
}
scrTarget()
if target&gt;0
{
gunangle = point_direction(x,y,target.xprevious,target.yprevious);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Let the battle begin!
sprite_index=sprInvertedChesireCatIntro;
mask_index=mskPickupThroughWall;
alarm[6]=60;
alarm[1]=70;
image_index=0;
visible=true;
with InvertedChesireCatTail
{
    repeat(4){
    with instance_create(x,y,Smoke)
    {motion_add(random(360),1+random(4))
    image_speed=0.2+random(0.2);}}
sprite_index=sprInvertedChesireCatTailIntro;
image_index=0;
visible=true;
}


if random(2)&lt;1
{
x=Player.x+64+random(64);
y=Player.y+64-random(64);
}
else
{
x=Player.x-64-random(64);
y=Player.y+64-random(64);
}

TopCont.darkness = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[1] = 4+random(15)

if instance_exists(Player)
{
if Player.loops&gt;1
alarm[1]=4+random(6)

}

drama=true;
if sprite_index != spr_hurt
sprite_index = spr_idle
scrTarget()
mask_index=mskChesireCat;
if target &gt; 0
{
if point_distance(x,y,target.x,target.y)&lt;300
{
if !place_meeting(x,y,Wall)&amp;&amp;place_meeting(x,y,Floor)
{
    if collision_line(x,y,target.x,target.y,Wall,0,0) &lt; 0//ON LAND
    {
    if random(6) &lt; 1//laser
    {
    //instance_create(x,y,ExplosionNonLethal);
    //direction = point_direction(x,y,target.x,target.y)+180
    
    ammo = 7
    alarm[3] = 15
    snd_play(sndLaserCrystalCharge)
    gunangle = point_direction(x,y,target.x,target.y)
    sprite_index = spr_fire
    alarm[1] = 20+random(15)
    
    if random(4)&lt;1
    scrDrop(100,0);
    //mask_index=mskChesireCat;
    
    /*speed*=0.4;
    image_index = 0
    sprite_index = spr_fire
    alarm[2]=5+random(30);
    walk = alarm[2]+20;
    alarm[1] = alarm[2]+20;*/
    }
    else if random(6)&lt;1//spin
    {
    ammo=5;
    alarm[4] = 16
    snd_play(sndBigBanditMeleeHit)
    gunangle = point_direction(x,y,target.x,target.y)
    sprite_index = spr_fire
    alarm[1] = 60+random(30)
    
    if random(3)&lt;1
    scrDrop(90,0);
    }
    else if random(3)&lt;1//quick burp
    {
    snd_play(sndBigBanditMeleeHit);
    snd_play(sndMinigun);
    gunangle = point_direction(x,y,target.x,target.y)
    sprite_index = spr_fire
    walk = 4+random(4)
    alarm[1] = walk+2
    repeat(4+irandom(8)){
    with instance_create(xprevious,yprevious,EnemyBullet1)
{motion_add(other.gunangle+random(60)-30,0.8+random(4.2))
image_angle = direction
team = other.team}}

    }
    else if random(4)&lt;1//Missiles!
    {
    //snd_play(sndDragonStart)
    gunangle = point_direction(x,y,target.x,target.y)
    sprite_index = spr_fire
    alarm[1] = 5+random(5)
    
    snd_play(sndRocket)

    with instance_create(x+8+random(8),y,TeaPotNuke)
    motion_add(other.gunangle,4)

    }
    else if random(3)&lt;1//Minions senpai
    {
     if random(2)&lt;1
    scrDrop(80,0);
    //snd_play(sndDragonStart)
    repeat(10)
    {
    with instance_create(x,y,Smoke)
    {motion_add(random(360),1+random(4))
    image_speed=0.3+random(0.2);}
    }
    walk=10;
    alarm[1] = walk+random(6)
    with instance_create(x,y,choose(InvertedCardGuy,InvertedCardGuy2,InvertedCardGuy,InvertedCardGuy2,InvertedCardGuy,InvertedCardGuy2,InvertedTeaPot))
    {
    alarm[1]=5+random(10);//significantly reduced waiting time before attacking
    }
    }
    else if random(3)&lt;1{
    
    if random(2)&lt;1
    scrDrop(80,0);
    
    walk=14+random(12);
    alarm[1]=walk;
    direction = point_direction(x,y,target.x,target.y)+random(30)-15
    }
    else if random(4)&lt;2{
    direction=random(360);
    walk=12+random(10);
    alarm[1]=walk;
    }
    else if random(8)&lt;1{
    direction=point_direction(x,y,target.x,target.y)+180+random(60)-30;
    walk=12+random(10);
    alarm[1]=walk;
    }
    else{
    speed=0;
    walk=10+random(30);
    alarm[1]=walk+10+random(20);
    }
    }//wall in between\/
    else if random(20)&lt;1//Missiles!
    {
    if random(5)&lt;1
    scrDrop(90,0);
    //snd_play(sndDragonStart)
    gunangle = point_direction(x,y,target.x,target.y)
    sprite_index = spr_fire
    alarm[1] = 10+random(10)
    
    snd_play(sndRocket)

    with instance_create(x+8+random(8),y,TeaPotNuke)
    motion_add(other.gunangle,4)

    }
    else if random(8)&lt;1{
    walk=10+random(10);
    alarm[1]=walk;
    direction = point_direction(x,y,target.x,target.y)+random(20)-10}
    else if random(6)&lt;1{
    walk=12+random(16);
    alarm[1]=walk;
    direction = random(360)}
    else
    {
    //mask_index=mskPickupThroughWall;
    walk=6+random(6);
    alarm[1]=walk+random(12);
    direction = point_direction(x,y,target.x,target.y)+random(20)-10
    }
    
    }
    else
    {
     if random(12)&lt;11//NOT ON LAND
    {
    walk=14+random(16);
    alarm[1]=walk;
    direction = point_direction(x,y,target.x,target.y)+random(30)-15
    }
    else if random(10)&lt;1
    {
    speed*=0.5;
    alarm[1]=5+random(5);
    }
    else
    {
    walk=6+random(12);
    alarm[1]=walk+2+random(6);
    direction = point_direction(x,y,target.x,target.y)+random(180)-90
    }
    }
}
else//Far from player
{
walk=16+random(12);
    alarm[1]=walk+10;
    motion_add(point_direction(x,y,target.x,target.y),4);
}
}//no target\/
else if random(10)&lt;2{
motion_add(random(360),0.5)
walk=30+random(10)
alarm[1]=walk;}

if random(40)&lt;1
    scrDrop(90,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if instance_exists(Player)
{
if Player.loops&gt;1&amp;&amp;speed&gt;4.7
speed=4.7
else if speed &gt; 4
speed = 4
}
else if speed &gt; 4
speed = 4
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///in case prepping or firing and just got hit!
if sprite_index=spr_hurt{
if alarm[3]&gt;0||alarm[4]&gt;0&amp;&amp;sprite_index!=sprInvertedChesireCatLaser
{
//if sprite_index=spr_fire
sprite_index=sprInvertedChesireCatLaser
//else
//sprite_index=spr_fire;
}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if drama{
event_inherited()

//if sprite_index != spr_hurt
//motion_add(direction,0.8)
if walk &gt; 0
{
walk -= 1
motion_add(direction,0.9)
}

if hspeed &gt; 0
right = 1
else if hspeed &lt; 0
right = -1
}

if alarm[3] &gt; 4
{
with instance_create(x+random(96)-48,y+random(96)-48,LaserCharge)
{
motion_add(point_direction(x,y,other.x,other.y),2+random(1))
alarm[0] = point_distance(x,y,other.x,other.y)/speed+1
}
repeat(8)   {
with instance_create(instance_nearest(x,y,Floor).x+random(6)-3,instance_nearest(x,y,Floor).y+random(6)-3,LaserCharge)
{
move_contact_solid(other.gunangle,random(480))
motion_add(random(360),1+random(1))
alarm[0] = 2+random(4)
}           }
}

if alarm[4]&gt;0
{
image_angle+=10;
}
else
image_angle=0;

if dodge &gt; 0
{

move_contact_solid(direction,0.2)
dodge -= 1
}

if point_distance(x,y,mouse_x,mouse_y)&lt;60&amp;&amp;mask_index!=mskPickupThroughWall&amp;&amp;sprite_index!=spr_fire&amp;&amp;sprite_index!=sprInvertedChesireCatLaser{
if mouse_check_button_pressed(mb_left) and target &gt; 0
{
if point_distance(x,y,target.x,target.y) &lt; 64
direction = point_direction(x,y,target.x,target.y)
else
direction = point_direction(target.x+lengthdir_x(point_distance(x,y,target.x,target.y)*0.95,point_direction(x,y,mouse_x,mouse_y)),target.y+lengthdir_y(point_distance(x,y,target.x,target.y)*0.95,point_direction(x,y,mouse_x,mouse_y)),x,y)+random(60)-30
dodge = 4
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///overwrite wall event?
motion_add(direction,1.2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_index=sprInvertedChesireCatIntro&amp;&amp;drama=false
{
drama=true;
instance_create(x,y,DramaCamera);
alarm[1]=10+random(10);
sprite_index=sprInvertedChesireCatIdle;
}

if sprite_index=spr_fire
{
drama=false;
sprite_index=sprInvertedChesireCatLaser;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,-1,x,y,right,1,image_angle,c_white,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
