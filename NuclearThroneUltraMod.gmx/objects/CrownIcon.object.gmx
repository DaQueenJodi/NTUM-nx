<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCrownSelect</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-102</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>mskIcon</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scrCrowns()
p = 0
if instance_exists(Player)
{
race=Player.race;
lastarea=Player.lastarea;
loops=Player.loops;
hard=Player.hard;
kills=Player.kills;
subarea=Player.subarea;
area=Player.area;
}
else
race=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if KeyCont.key_fire[p] = 1 and (mouse_x &lt; x+16 and mouse_y &lt; y+16 and mouse_x &gt; x-16 and mouse_y &gt; y-16)
{
if crown = 0
crown = ceil(random(crownmax-1)+1)
oldcrown = Player.crown
Player.crown = crown
Player.crownpoints -= 1

//RESET INVERTED CHANCE
    with Player
    {
        invertedchance=7.5
        if race=15
        invertedchance=12;
    }

//NONE
if crown = 1
{
with Crown
instance_destroy()
}

//UNDO STUFF

//CROWN OF DESTINY
if oldcrown = 8 
Player.skillpoints -= 1
//CROWN OF DEATH
if oldcrown = 3
Player.maxhealth += 1

//DO STUFF

//CROWN OF DESTINY
if crown = 8 
Player.skillpoints += 1
//CROWN OF DEATH
if crown = 3
{
Player.maxhealth -= 1
if Player.my_health &gt; Player.maxhealth
Player.my_health = Player.maxhealth}


//CROWN OF DECAY
if crown = 6
Player.decay = 300

//CROWN OF REINCARNATION
if crown==11
{

with Player
{
skeletonlives=0;
instance_destroy();
}

with WepPickup
instance_destroy();

with Corpse
instance_destroy();

instance_create(x,y,Player);

with Player//Data to keep
{
race = other.race
crown = other.crown
lastarea = other.lastarea;
area = other.area//other.lastarea;
loops = other.loops;
hard = other.hard;
kills = other.kills;
subarea=other.subarea;
//event_perform(ev_other,ev_room_end);
}
/*with instance_create(x,y,GenCont)
{race = other.race
crown = other.crown}*/

}

//CROWN OF INVERSION
if crown==12
{
    with Player
    {
    invertedchance=47.5//7.5
    if race=15//ATOM
    invertedchance=52;//12;
    }
}

with CrownIcon
instance_destroy()

with LevCont
instance_destroy()

if Player.crownpoints &gt; 0 or Player.skillpoints &gt; 0
{
instance_create(x,y,LevCont)
}
else
{
with instance_create(x,y,GenCont)
race = Player.race
}

snd_play(sndSkillPick)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_dkgray)
//draw_rectangle(x-12,y-16,x+12,y+16,0)

if mouse_x &gt; x-16 and mouse_x &lt; x+16 and mouse_y &gt; y-20 and mouse_y &lt; y+20
{
draw_sprite(sprSkillSelected,-1,x,y)
draw_sprite(sprite_index,crown,x+2,y-2)
}
else
{
draw_sprite(sprite_index,crown,x,y)
draw_sprite_ext(sprite_index,crown,x,y,1,1,0,c_black,0.05)
}

draw_set_font(fntM)
draw_set_valign(fa_bottom)
draw_set_halign(fa_right)

txt2 = string(crown_name[crown])+"#"+string(crown_text[crown])
if mouse_x &gt; x-16 and mouse_x &lt; x+16 and mouse_y &gt; y-20 and mouse_y &lt; y+20
{

drawx = x
drawy = view_yview+view_hview-58//48

if drawx-string_width(txt2)/2-2 &lt; view_xview+2
drawx = view_xview+4+string_width(txt2)/2

if drawx+string_width(txt2)/2+2&gt; view_xview+view_wview-2
drawx = view_xview+view_wview-4-string_width(txt2)/2

draw_set_color(c_black)
draw_set_alpha(0.8)
draw_rectangle(drawx-string_width(txt2)/2-2,drawy-17-string_height(txt2),drawx+string_width(txt2)/2+2,drawy-12,0)
draw_set_alpha(1)


draw_sprite_ext(sprMenuPointer,0,x,drawy-12,1,1,0,c_white,0.8)

draw_text(drawx+string_width(txt2)/2,drawy-13,string(txt2))
draw_text(drawx+string_width(txt2)/2+1,drawy-13,string(txt2))
draw_text(drawx+string_width(txt2)/2+1,drawy-14,string(txt2))
draw_set_color(c_silver)
draw_text(drawx+string_width(txt2)/2,drawy-14,string(txt2))
draw_set_color(c_white)
draw_text(drawx+string_width(txt2)/2,drawy-14-string_height(txt2)+string_height(crown_name[crown]),string(crown_name[crown]))
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
