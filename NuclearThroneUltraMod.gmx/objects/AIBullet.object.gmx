<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprAIBullet</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>projectile</parentName>
  <maskName>mskBullet1</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
/*THIS IS HOW IT SHOULD WORK

damagers have a DAMAGE
their collision can be NORMAL, PIERCING or PIERCING AT OVERKILL (piercing checks per frame)
their type can be 0, DEFLECTABLE, DESTRUCTABLE or DEFLECTORS
they have a FORCE and can be 0 or DIRECTIONAL */

typ = 1 //0 = normal, 1 = deflectable, 2 = destructable, 3 = deflectable

rotation=-1;
maxspeed=10;

friction=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed=maxspeed;

image_angle=direction;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if collision_circle(x,y-8,16,Wall,false,true)
{//wall above
    if Direction&lt;90
    {
    rotation=0;
    }
    else
    {
    rotation=1;
    }
}
else if collision_circle(x,y+8,16,Wall,false,true)
{//wall below
    if Direction&lt;270
    {
    rotation=0;
    }
    else
    {
    rotation=1;
    }
}
else if collision_circle(x-4,y,16,Wall,false,true)
{//wall left
    if Direction&gt;180
    {
    rotation=1;
    }
    else
    {
    rotation=0;
    }
}
else if collision_circle(x+4,y,16,Wall,false,true)
{//wall right
    if Direction&gt;270
    {
    rotation=1;
    }
    else
    {
    rotation=0;
    }
}

if rotation=0
{
        if place_meeting(x+8,y,Wall)
        {//Wall right
        direction=90;//    \/
        } 
        else if place_meeting(x-8,y,Wall)
        {//Wall left
        direction=270;//    /\
        }
        else if place_meeting(x,y+8,Wall)
        {//Wall below
        direction=180;//    &lt;--
        }
        else if place_meeting(x,y-8,Wall)
        {//Wall above
        direction=0;//    --&gt;
        }
}
else if rotation=1
{
        if place_meeting(x+8,y,Wall)
        {//Wall right
        direction=270;//    /\
        }
        else if place_meeting(x-8,y,Wall)
        {//Wall left
        direction=90;//    \/
        }
        else if place_meeting(x,y+8,Wall)
        {//Wall below
        direction=0;//    --&gt;
        }
        else if place_meeting(x,y-8,Wall)
        {//Wall above
        direction=180;//    &lt;--
        }
}
*/

if collision_circle(x,y,16,Wall,false,true)
{//hug wall
//var nearWall = instance_nearest(x+lengthdir_x(speed,direction),y+lengthdir_y(speed,direction),Wall);
var nearWall = instance_nearest(x,y,Wall);
motion_add(point_direction(x,y,nearWall.x,nearWall.y),speed);

}

if instance_exists(enemy)
{
var nearEnemy = instance_nearest(x,y,enemy);
if point_distance(x,y,nearEnemy.x,nearEnemy.y)&lt;64
motion_add(point_direction(x,y,nearEnemy.x,nearEnemy.y,),2);
}


/*
if place_meeting(x,y-4,Wall)
{//wall above
    if Direction&lt;90
    {
    
        if place_meeting(x+4,y,Wall)
        {//Wall right
        direction=270;//    \/
        }
        
        if place_meeting(x-4,y,Wall)
        {//Wall left
        direction=90;//    /\
        }
        
        if place_meeting(x,y+4,Wall)
        {//Wall below
        direction=180;//    &lt;--
        }
        
        if place_meeting(x,y-4,Wall)
        {//Wall above
        direction=0;//    --&gt;
        }
    
    }
    else
    {
    
        if place_meeting(x+4,y,Wall)
        {//Wall right
        direction=90;//    /\
        }
        
        if place_meeting(x-4,y,Wall)
        {//Wall left
        direction=270;//    \/
        }
        
        if place_meeting(x,y+2,Wall)
        {//Wall below
        direction=0;//    --&gt;
        }
        
        if place_meeting(x,y-2,Wall)
        {//Wall above
        direction=180;//    &lt;--
        }
    
    }
}
else if place_meeting(x,y+4,Wall)
{//wall below
    if Direction&lt;270
    {
    
        if place_meeting(x+4,y,Wall)
        {//Wall right
        direction=270;//    \/
        }
        
        if place_meeting(x-4,y,Wall)
        {//Wall left
        direction=90;//    /\
        }
        
        if place_meeting(x,y+4,Wall)
        {//Wall below
        direction=180;//    &lt;--
        }
        
        if place_meeting(x,y-4,Wall)
        {//Wall above
        direction=0;//    --&gt;
        }
    
    }
    else
    {
    
        if place_meeting(x+4,y,Wall)
        {//Wall right
        direction=90;//    /\
        }
        
        if place_meeting(x-4,y,Wall)
        {//Wall left
        direction=270;//    \/
        }
        
        if place_meeting(x,y+2,Wall)
        {//Wall below
        direction=0;//    --&gt;
        }
        
        if place_meeting(x,y-2,Wall)
        {//Wall above
        direction=180;//    &lt;--
        }
    
    }
}
else if place_meeting(x-4,y,Wall)
{//wall left
    if Direction&lt;180
    {
    
        if place_meeting(x+4,y,Wall)
        {//Wall right
        direction=270;//    \/
        }
        
        if place_meeting(x-4,y,Wall)
        {//Wall left
        direction=90;//    /\
        }
        
        if place_meeting(x,y+4,Wall)
        {//Wall below
        direction=180;//    &lt;--
        }
        
        if place_meeting(x,y-4,Wall)
        {//Wall above
        direction=0;//    --&gt;
        }
    
    }
    else
    {
    
        if place_meeting(x+4,y,Wall)
        {//Wall right
        direction=90;//    /\
        }
        
        if place_meeting(x-4,y,Wall)
        {//Wall left
        direction=270;//    \/
        }
        
        if place_meeting(x,y+2,Wall)
        {//Wall below
        direction=0;//    --&gt;
        }
        
        if place_meeting(x,y-2,Wall)
        {//Wall above
        direction=180;//    &lt;--
        }
    
    }
}
else if place_meeting(x+4,y,Wall)
{//wall right
    if Direction&gt;270
    {
    
        if place_meeting(x+4,y,Wall)
        {//Wall right
        direction=270;//    \/
        }
        
        if place_meeting(x-4,y,Wall)
        {//Wall left
        direction=90;//    /\
        }
        
        if place_meeting(x,y+4,Wall)
        {//Wall below
        direction=180;//    &lt;--
        }
        
        if place_meeting(x,y-4,Wall)
        {//Wall above
        direction=0;//    --&gt;
        }
    
    }
    else
    {
    
        if place_meeting(x+4,y,Wall)
        {//Wall right
        direction=90;//    /\
        }
        
        if place_meeting(x-4,y,Wall)
        {//Wall left
        direction=270;//    \/
        }
        
        if place_meeting(x,y+2,Wall)
        {//Wall below
        direction=0;//    --&gt;
        }
        
        if place_meeting(x,y-2,Wall)
        {//Wall above
        direction=180;//    &lt;--
        }
    
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="hitme">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if other.team != team and other.my_health &gt; 0
{instance_destroy()
with other
{
my_health -= 3
if instance_exists(Player){
if Player.ultra_got[28]//roids ultra d
{my_health -=2;}}
sprite_index = spr_hurt
image_index = 0
motion_add(other.direction,8)
}
snd_play(other.snd_hurt)
instance_create(x,y,BulletHit)

//RECYCLE GLAND
if instance_exists(Player){
if Player.skill_got[16] = 1 and random(3) &lt; 2.2
{
if !(Player.ammo[1] &gt;= Player.typ_amax[1])
{
Player.ammo[1] += 1
dir = instance_create(x,y,PopupText)
dir.mytext = "+1"
dir.alarm[1]=5;
dir.time=5;
}

}}

}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_bounce_solid(false);
/*move_contact_solid(direction,max(1,min(maxspeed,speed)))
if !place_free(x+hspeed,y){hspeed /= 2
if !place_free(x+hspeed,y) hspeed = 0}
if !place_free(x,y+vspeed){vspeed /= 2
if !place_free(x,y+vspeed)vspeed = 0}

/*instance_destroy()
instance_create(x,y,Dust)
if !sound_isplaying(sndHitWall)
snd_play(sndHitWall)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0
image_index = 1
//instance_create(x,y,Dust)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
