<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSapling</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>mskAlly</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>raddrop = 5
size = 1
target = -1
goForIt=false;
/*maxhealth = 12
meleedamage = 0


spr_idle = sprAllyAppear
spr_walk = sprAllyWalk
spr_hurt = sprAllyHurt
spr_dead = sprAllyDead

image_speed = 0.4
friction = 0.4
right = choose(1,-1)
my_health = maxhealth

team = 2

snd_hurt = sndBanditHit
snd_dead = sndBanditDie
snd_mele = sndMaggotBite
*/
//behavior
walk = 0
gunangle = random(360)
alarm[1] = 2
//alarm[0] = 24/0.4//intro animation which is cool af
wkick = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scrDrop(80,0)

//snd_play(snd_dead)

Sleep(20+size*15)

do {if raddrop &gt; 15
{raddrop -= 10
with instance_create(x,y,BigRad)
{motion_add(other.direction,other.speed)
motion_add(random(360),random(other.raddrop/2)+2)
repeat(speed)
speed *= 0.9}}
}
until raddrop &lt;= 15

repeat(raddrop)
{
with instance_create(x,y,Rad)
{motion_add(other.direction,other.speed)
motion_add(random(360),random(other.raddrop/2)+2)
repeat(speed)
speed *= 0.9}
}
var ang;
ang = random(360);
instance_create(x+lengthdir_x(24,ang),y+lengthdir_y(24,ang),MeatExplosion)
instance_create(x+lengthdir_x(24,ang+120),y+lengthdir_y(24,ang+120),MeatExplosion)
instance_create(x+lengthdir_x(24,ang+240),y+lengthdir_y(24,ang+240),MeatExplosion)
instance_create(x,y,MeatExplosion)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[1] = 8+random(5)

if !instance_exists(target)
target = -1
if target = -1
{
if instance_exists(enemy)
target = instance_nearest(x,y,enemy)
}

if target &gt; 0
{

//GOT A TARGET
if collision_line(x,y,target.x,target.y,Wall,0,0) &lt; 0 and point_distance(x,y,target.x,target.y) &lt; 120
{

//if random(6) &lt; 5
//{
//FIRE
goForIt=true;

//}
/*
else
{
//DONT FIRE
direction = point_direction(x,y,target.x,target.y)+random(180)-90
speed = 0.5

if instance_exists(Player) and random(4) &lt; 3
{
motion_add(point_direction(x,y,mouse_x,mouse_y),0.8)
motion_add(point_direction(x,y,Player.x,Player.y),1)
}

walk = 10+random(10)
}*/
}
else if random(4) &lt; 3
{
//CANT SEE TARGET
motion_add(random(360),0.4)
if instance_exists(Player)
{
motion_add(point_direction(x,y,mouse_x,mouse_y),0.8)
motion_add(point_direction(x,y,Player.x,Player.y),1)
}
walk = 10+random(10)
alarm[1] = walk+2
}
}
else if random(10) &lt; 1
{
//GOT NO TARGET
motion_add(random(360),0.4)
walk = 20+random(10)
alarm[1] = walk+5
gunangle = direction
if hspeed &gt; 0
right = 1
else if hspeed &lt; 0
right = -1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if my_health &lt;= 0
instance_destroy()

//WKICK
if variable_local_exists("wkick") = 1
{
if wkick &gt; 0
wkick -= 1
if wkick &lt; 0
wkick += 1
}


//ANIMATE ME PLZ
if variable_local_exists("spr_chrg") = 1
{
if sprite_index != spr_hurt and sprite_index != spr_chrg
sprite_index = spr_idle
if sprite_index = spr_hurt or sprite_index = spr_chrg
{if image_index &gt; 2
sprite_index = spr_idle}
}
else
{
if variable_local_exists("spr_fire") = 1
{
if speed = 0
{if sprite_index != spr_hurt and sprite_index != spr_fire
sprite_index = spr_idle}
else
{if sprite_index != spr_hurt and sprite_index != spr_fire
sprite_index = spr_walk}
if sprite_index = spr_hurt or sprite_index = spr_fire
{if image_index &gt; 2
sprite_index = spr_idle}
}
else
{
if speed = 0
{if sprite_index != spr_hurt
sprite_index = spr_idle}
else
{if sprite_index != spr_hurt
sprite_index = spr_walk}
if sprite_index = spr_hurt
{if image_index &gt; 2
sprite_index = spr_idle}
}
}*/

if walk &gt; 0
{
walk -= 1
motion_add(direction,0.8)
}
if instance_exists(Player)
{
if point_distance(x,y,Player.x,Player.y) &gt; 52
mp_potential_step(Player.x,Player.y,1,false)
}

if(instance_exists(enemy)){
    if goForIt
    {
        if instance_exists(target)
        {
        motion_add(point_direction(x,y,target.x,target.y),4);
        }
    }
}

if speed &gt; 5
speed = 5

/*
if(alarm[0]&gt;0)
{
sprite_index=sprAllyAppear;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="prop">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>motion_add(point_direction(other.x,other.y,x,y),0.5)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
/*if size &lt;= other.size
motion_add(point_direction(other.x,other.y,x,y),1)

//cap speed
if speed &gt; 16 speed = 16
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="chestprop">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>motion_add(point_direction(other.x,other.y,x,y),0.5)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if size &lt;= other.size
motion_add(point_direction(other.x,other.y,x,y),1)

//cap speed
if speed &gt; 16 speed = 16
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_bounce_solid(true)
/*var olddir oldspeed;
olddir = direction
oldspeed = speed
move_bounce_solid(true)

motion_add(olddir,speed)
speed = oldspeed

if hspeed &gt; 0 and !place_free(x+hspeed,y)
{do hspeed -= friction until place_free(x+hspeed,y) or hspeed &lt;= 0}
else
if hspeed &lt; 0 and !place_free(x+hspeed,y)
{do hspeed += friction until place_free(x+hspeed,y) or hspeed &gt;= 0}

if vspeed &gt; 0 and !place_free(x,y+vspeed)
{do vspeed -= friction until place_free(x,y+vspeed) or vspeed &lt;= 0}
else
if vspeed &lt; 0 and !place_free(x,y+vspeed)
{do vspeed += friction until place_free(x,y+vspeed) or vspeed &gt;= 0}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
/*
if gunangle &lt;= 180
draw_sprite_ext(sprBanditGun,-1,x+lengthdir_x(-wkick,gunangle),y+lengthdir_y(-wkick,gunangle),1,right,gunangle,c_white,1)
draw_sprite_ext(sprite_index,-1,x,y,right,1,0,c_white,1)
if gunangle &gt; 180
draw_sprite_ext(sprBanditGun,-1,x+lengthdir_x(-wkick,gunangle),y+lengthdir_y(-wkick,gunangle),1,right,gunangle,c_white,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
