<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprInvertedHotDrakeIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>enemy</parentName>
  <maskName>mskHotDrake</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>raddrop = 240
maxhealth = 2600
meleedamage = 0
size = 2

if UberCont.loops&gt;1
maxhealth=3400;

event_inherited()
/* THIS IN BEGIN STEP!
if instance_exists(Player){
my_health=round( (1+(Player.loops*0.2))*my_health )//bandit loop 1: 1.1*4= 5(rounded up)
max_health=my_health;
}
*/
spr_idle = sprInvertedHotDrakeIdle
spr_walk = sprInvertedHotDrakeIdle
spr_hurt = sprInvertedHotDrakeHurt
spr_dead = sprInvertedHotDrakeVanish
spr_fire = sprInvertedHotDrakeFire

spr_prep = sprInvertedHotDrakePrep
spr_vanish=sprInvertedHotDrakeVanish
spr_appear=sprInvertedHotDrakeAppear

snd_dead = sndFrogExplode
right=-1;
awake=false;
atk=0;
vanishing=-1;
appearing=-1;
mask_index=mskPickupThroughWall;
//behavior
//alarm[1] = 10+random(10)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with MusCont
{

audio_stop_sound(song);
song = sndBossWin
snd_play(song)
//snd_loop(amb)

audio_master_gain(max(0,sqrt(UberCont.opt_sfxvol)))

audio_sound_gain(song,max(0,sqrt(UberCont.opt_musvol)),0);

audio_sound_gain(amb,max(0,sqrt(UberCont.opt_ambvol)),0);

//audio_sound_gain(sndBossWin,max(0,sqrt(UberCont.opt_musvol)),0);

}
snd_play(sndDragonEmerge)

scrDrop(10,1)
scrDrop(100,0)
scrDrop(50,50)
scrDrop(50,2)

event_inherited()

repeat(50){//flame wall of death baby yes 
with instance_create(x,y+96,Flame)
    {
    sprite_index = sprFireLilHunter
    motion_add(other.direction+random(180)-90,3+random(8))
    image_angle = direction
    team = other.team
    }
}
if audio_is_playing(sndDragonLoop)
audio_stop_sound(sndDragonLoop)

//drop Time Thrower?
if(random(50)&lt;1){
with instance_create(x,y,WepPickup)
{
scrWeapons()
wep =177
name = wep_name[177]
ammo = 0
type = wep_type[177]
curse = 0
sprite_index = wep_sprt[177]
}}

if instance_exists(Marker)
{
    if place_meeting(x,y,Marker)
    {
        with Player
        {
        
        dragonmarked=true;
        
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mask_index=mskHotDrake;
direction=point_direction(x,y,target.x,target.y);
repeat(50){//flame wall of death baby yes 
with instance_create(x,y+96,Flame)
    {
    sprite_index = sprFireLilHunter
    motion_add(other.direction+random(180)-90,3+random(6))
    move_contact_solid(direction,16);
    image_angle = direction
    team = other.team
    }
}
    repeat(10){
    with instance_create(x,y,MiniFlameCannonBall)
        {
        image_angle=random(360);
        motion_add(other.direction+(random(200)-100),2+random(2))
        team = other.team}}
    audio_stop_sound(sndDragonLoop)
    snd_play(sndExplosionXL);
    alarm[1]=30;
    //appearing=-1;
    image_index=0;
    sprite_index=spr_idle;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>visible=true;
x=xstart;
y=ystart;
image_index=0;
sprite_index=spr_appear;
image_speed=0.4;
//appearing=0;
alarm[6]=30
alarm[1]=300;
snd_play(sndDragonLoop);
snd_play(sndDragonStart);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>visible=false;
x=xstart;
y=ystart;
sprite_index=spr_idle;
alarm[1]=300;
alarm[5]=80;//Delay before appearing
//vanish=-1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if atk=1//breath fire pls
{
    alarm[2]=36;//fire breather
    snd_play(sndDragonStart);
    snd_loop(sndDragonLoop);
    alarm[1]=36;
    image_index = 0
    sprite_index = spr_fire;
    
}
if atk=2//BLUE BALL OF FIRE!
{
    image_index=0;
    sprite_index=spr_fire;
    alarm[1]=10;

    direction = point_direction(x,y,target.x,target.y)//backup backup
    BackCont.shake += 10
    snd_play(sndDragonStop)
    repeat(12)
    {
    with instance_create(x,y,Flame)
    {
    sprite_index = sprFireLilHunter
    motion_add(other.direction+random(60)-30,2+random(6))
    image_angle = direction
    team = other.team
    }
    }
        with instance_create(x,y,HotDrakeFlameCannon)
        {
        image_angle=random(360);
        motion_add(other.direction+(random(12)-6),2.6)
        team = other.team}
        
    
}

if atk=3//SPLIT BALL YO
{
appear=true;
    image_index=0;
    sprite_index=spr_fire;
    alarm[1]=11;

    direction = point_direction(x,y,target.x,target.y)//BACK UP
    BackCont.shake += 10
    snd_play(sndDragonStop)
    repeat(12)
    {
    with instance_create(x,y,Flame)
    {
    sprite_index = sprFireLilHunter
    motion_add(other.direction+random(60)-30,2+random(6))
    image_angle = direction
    team = other.team
    }
    }
        with instance_create(x,y,InvertedHotDrakeSplitBall)
        {
        image_angle=random(360);
        motion_add(other.direction+(random(12)-6),2.7)
        team = other.team}
        
    
}

image_speed=0.4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//breath fire!
audio_stop_sound(sndDragonLoop)
snd_play(sndDragonStop)
image_speed=0.4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if awake{
    alarm[1] = 6+random(8)
    if sprite_index != spr_hurt //&amp;&amp; sprite_index != spr_fire i added this
    sprite_index = spr_idle
    scrTarget()
    
    if instance_exists(Player)
{
if Player.loops&gt;0
alarm[1] = 4+random(5);
}
    
    if target &gt; 0
    {
    if collision_line(x,y,target.x,target.y,Wall,0,0) &lt; 0
    {
    if my_health&lt;maxhealth*0.75&amp;&amp;random(24)&lt;1
    {
    sprite_index=spr_vanish
    image_index=0;
    mask_index=mskPickupThroughWall;
    direction=90;
    alarm[1]=300;
    alarm[4]=40
    //vanishing=0;
    }
    else if point_distance(x,y,target.x,target.y)&gt;300&amp;&amp;random(3) &lt; 1//long Shotgun!
    {
    image_index=0;
    sprite_index=spr_fire;
    alarm[1]=8;

    direction = point_direction(x,y,target.x,target.y)//go to player
    BackCont.shake += 5
    snd_play(sndDragonFire)
    repeat(6)
    {
    with instance_create(x,y,Flame)
    {
    sprite_index = sprFireLilHunter
    motion_add(other.direction+random(60)-30,4+random(6))
    image_angle = direction
    team = other.team
    }
    }
    repeat(4){
        with instance_create(x,y,EnemyLightningBall)
        {
        image_angle=random(360);
        motion_add(other.direction+(random(22)-11),4+random(5))
        team = other.team}
        }
    }
    else if point_distance(x,y,target.x,target.y)&gt;70&amp;&amp;random(14) &lt; 1//long range
    {
    image_index=0;
    sprite_index=spr_fire;
    alarm[1]=39;

    direction = point_direction(x,y,target.x,target.y)//go to player son
    BackCont.shake += 5
    snd_play(sndDragonFire)
    repeat(8)
    {
    with instance_create(x,y,Flame)
    {
    sprite_index = sprFireLilHunter
    motion_add(other.direction+random(60)-30,2+random(6))
    image_angle = direction
    team = other.team
    }
    }
        with instance_create(x,y,EnemyLightningBall)
        {
        image_angle=random(360);
        motion_add(other.direction+(random(40)-20)+50,4)
        team = other.team}
        with instance_create(x,y,EnemyLightningBall)
        {
        image_angle=random(360);
        motion_add(other.direction+(random(40)-20)-50,4)
        team = other.team}
        with instance_create(x,y,EnemyLightningBall)
        {
        image_angle=random(360);
        motion_add(other.direction+(random(40)-20),4)
        team = other.team}
    }
    else if point_distance(x,y,target.x,target.y)&gt;70&amp;&amp;random(14) &lt; 1//long SNIPE!
    {
    image_index=0;
    sprite_index=spr_fire;
    alarm[1]=12;

    direction = point_direction(x,y,target.x,target.y)//go to player
    BackCont.shake += 5
    snd_play(sndDragonFire)
    repeat(8)
    {
    with instance_create(x,y,Flame)
    {
    sprite_index = sprFireLilHunter
    motion_add(other.direction+random(60)-30,2+random(6))
    image_angle = direction
    team = other.team
    }
    }
        with instance_create(x,y,EnemyLightningBall)
        {
        image_angle=random(360);
        motion_add(other.direction+(random(12)-6),3+random(3))
        team = other.team}
    }
    else if random(8)&lt;1 &amp;&amp; point_distance(x,y,target.x,target.y)&lt;200//breathe fire short range
    {
    alarm[3]=40//prep time
    image_index = 0
    sprite_index = spr_prep//spr_prep
    alarm[1] = 45
    atk=1;
    }
    else if random(12)&lt;1//fireball
    {
    alarm[3]=15//prep time
    image_index = 0
    sprite_index = spr_prep//spr_prep
    alarm[1] = 17
    atk=2;
    }
    else if random(9)&lt;1//splitball
    {
    alarm[3]=15//prep time
    image_index = 0
    sprite_index = spr_prep//spr_prep
    alarm[1] = 16
    atk=3;
    }
    else if point_distance(x,y,target.x,target.y)&gt;200//move towards player if you're far away
    {motion_add(point_direction(x,y,target.x,target.y),1.4);}
    else if random(5)&lt;1
    {motion_add(270,1)}//down?
    else if random(5)&lt;1
    {motion_add(90,2+random(5))}//up?
    else if random(5)&lt;1
    {motion_add(random(360),1)}//random?
    else if random(5)&gt;1
    {motion_add(point_direction(x,y,target.x,target.y),1.4);}//towards Player
    else if random(5)&gt;1
    {motion_add(point_direction(x,y,target.x,target.y)+180,1);}//away from Player
    else 
    motion_add(random(360),1)//I donno just go
    
    }//cant see player snipe their cover and be aggro
    else
    { 
    if point_distance(x,y,target.x,target.y)&gt;450&amp;&amp;random(3) &lt; 1//long Shotgun! don't you hide from me!
    {
    image_index=0;
    sprite_index=spr_fire;
    alarm[1]=8;

    direction = point_direction(x,y,target.x,target.y)//go to player
    BackCont.shake += 5
    snd_play(sndDragonFire)
    repeat(6)
    {
    with instance_create(x,y,Flame)
    {
    sprite_index = sprFireLilHunter
    motion_add(other.direction+random(60)-30,4+random(6))
    image_angle = direction
    team = other.team
    }
    }
    repeat(4){
        with instance_create(x,y,EnemyLightningBall)
        {
        image_angle=random(360);
        motion_add(other.direction+(random(22)-11),4+random(5))
        team = other.team}
        }
    }
    else if point_distance(x,y,target.x,target.y)&gt;70&amp;&amp;random(14) &lt; 1//cover sniper!
    {
    image_index=0;
    sprite_index=spr_fire;
    alarm[1]=12;

    direction = point_direction(x,y,target.x,target.y)//go to player
    BackCont.shake += 5
    snd_play(sndDragonFire)
    repeat(8)
    {
    with instance_create(x,y,Flame)
    {
    sprite_index = sprFireLilHunter
    motion_add(other.direction+random(60)-30,2+random(6))
    image_angle = direction
    team = other.team
    }
    }
        with instance_create(x,y,EnemyLightningBall)
        {
        image_angle=random(360);
        motion_add(other.direction,2+random(3))
        team = other.team}
    }
    
    
    motion_add(random(360),1)
    }
    }
    else 
    motion_add(random(360),0.5)
    
    if random(100)&lt;10{//Hot breath of awesomeness
    repeat(4){//if breath doesn't come out of nose enuf then we could make it happen only in certain frame
    with instance_create(x-16,y,Smoke){
    motion_add(270+random(12)-6,1+random(4));
    }}
    
    }
    

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if alarm[4]&gt;0
{sprite_index=spr_vanish}
if alarm[6]&gt;0
{sprite_index=spr_appear}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_number(enemy) &lt;= 2&amp;&amp;!instance_exists(GenCont){
if awake=false{
x=xstart
y=ystart
alarm[1]=80;
meleedamage=7;
awake=true;
//instance_create(x,y,HotDrakeLava);
mask_index=mskHotDrake;
instance_create(x,y,DramaCamera);
}
}
if awake=false{
x=xstart+2000;//place outside level
y=ystart+2000;
maxhealth = 1000//1250//Big Dog =300
my_health=maxhealth;


if instance_exists(Player){
my_health=round( (1+(Player.loops*0.2))*my_health )//bandit loop 1: 1.1*4= 5(rounded up)
maxhealth=my_health;
}

if UberCont.opt_gamemode==5//1HP gamemode
{
my_health=1;
maxhealth=my_health
}

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if awake{
event_inherited()


if sprite_index != spr_hurt{
motion_add(direction,0.4)
}
if my_health&lt;maxhealth*0.25
{ if speed &gt;4{
speed=4}}
else{
if speed &gt; 2.4
speed = 2.4
}


if alarm[3]&gt;0{
//sniffing in da smoke yo
    with instance_create(x-16+random(12)-6,y+80+random(16),HotDrakePrepSmoke){
    motion_add(point_direction(x,y,other.x,other.y),1)
    }
sprite_index= spr_prep;
}


if alarm[2]&gt;1{//breathe fire!
scrTarget();
direction = point_direction(x,y,target.xprevious,target.yprevious)
    BackCont.shake += 0.1
    
if sprite_index=spr_hurt{//the prick hit me!
sprite_index= spr_fire;
image_speed=0;
image_index=4;
}

if random(3)&lt;1
{
snd_play(choose(sndLightning1,sndLightning2,sndLightning3,sndSpark1,sndSpark2,sndThunder));
with instance_create(x,y,Lightning)
{image_angle = other.direction+(random(30)-15)
team = other.team
ammo = 9+irandom(3)
event_perform(ev_alarm,0)
visible = 0
with instance_create(x,y,LightningSpawn)
image_angle = other.image_angle}
}


repeat(2){
with instance_create(x-8,y-8,Flame)
    {
    sprite_index = sprFireLilHunter
    motion_add(other.direction+random(60)-20,1+random(4))
    image_angle = direction
    team = other.team
    }
    }
}



}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_bounce_solid(true)
instance_create(other.x,other.y,ExplosionNonLethal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Floor">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if other.object_index!=FloorLava{
x=xprevious;
y=yprevious;
direction+=180;//turn around stoopid
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_index=spr_fire &amp;&amp; alarm[2]&gt;0
{
image_speed=0;
image_index=4;
}
else if sprite_index=spr_fire
{
sprite_index=spr_idle
}

if sprite_index=spr_prep &amp;&amp; alarm[3]&gt;0//prep
{
image_speed=0;
image_index=6;
}

if sprite_index=spr_vanish
{
alarm[4]=1;
image_index=18
image_speed=0;
}
if sprite_index=spr_appear
{
alarm[6]=1;
image_index=18
image_speed=0;
}
/*
if sprite_index=spr_vanish{
visible=false;
x=xstart;
y=ystart;
alarm[1]=60;
alarm[4]=30;//Delay before appearing
atk=4;
vanish=-1;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,-1,x,y,right,1,0,c_white,1)</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
